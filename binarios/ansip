#!/bin/bash

# Funci  n para imprimir en color
print_color() {
    local color=$1
    shift
    echo -e "\e[${color}m$@\e[0m"
}

# Si se proporciona al menos un argumento
if [ $# -gt 0 ]; then
    # Si el primer argumento es '-a'
    if [ "$1" = "-a" ]; then
        # Eliminar el primer argumento '-a' de la lista de argumentos
        shift
        # Ejecutar el comando Ansible con los argumentos restantes
        ansible all -m ping -i ~/.ssh/ansible_hosts "$@"
    else
        # Ejecutar el comando Ansible por defecto
        output=$(ansible all -m ping -i ~/.ssh/ansible_hosts | awk '/SUCCESS/{print $1}')
        
        # Utilizar expresiones regulares para extraer los nombres de los hosts conectados
        connected_hosts=$(echo "$output" | sed 's/$/: online/' | awk '{print "\033[1;34m" $1 "\033[0m" " \033[1;32monline\033[0m"}')
        
        # Imprimir los nombres de los hosts en l  nea en azul y "online" en verde
        print_color '32' "$connected_hosts"
    fi
else
          # Ejecutar el comando Ansible y filtrar la salida para hosts conectados y desconectados
        output=$(ansible all -m ping -i ~/.ssh/ansible_hosts)

        # Utilizar expresiones regulares para extraer los nombres de los hosts conectados y desconectados
        connected_hosts=$(awk '/SUCCESS/{print $1}' <<< "$output" | sed 's/ |.*$//' | while read -r line; do echo -e "\033[1;34m$line\033[0m : \033[1;32monline\033[0m"; done)
        disconnected_hosts=$(awk '/UNREACHABLE/{print $1}' <<< "$output" | while read -r line; do echo -e "\033[1;31m$line\033[0m : \033[1;31moffline\033[0m"; done)

        # Imprimir los nombres de los hosts en l  nea en azul seguido de "online", y los desconectados en rojo seguido de "offline"
        echo -e "$connected_hosts"
        echo -e "$disconnected_hosts"
fi

