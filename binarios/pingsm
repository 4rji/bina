#!/usr/bin/env bash

printf "\n\033[1;33m_________________________________________________________\033[0m\n\n"

# Crear archivos temporales para almacenar los hosts online y offline
offlineFile=$(mktemp)
onlineFile=$(mktemp)

# Definir códigos de colores
BLUE="\033[34m"    # Azul para los nombres de los hosts
WHITE="\033[37m"   # Blanco para las IPs
GREEN="\033[32m"   # Verde para 'online'
RED="\033[31m"     # Rojo para 'offline'
RESET="\033[0m"    # Reiniciar colores

# Usar dos arrays separados en lugar de un array asociativo
hosts=()
ips=()

while read -r line; do
    line=$(echo "$line" | sed 's/#.*//;s/^\s*//;s/\s*$//')
    [[ -z "$line" ]] && continue

    key=$(echo "$line" | awk '{print tolower($1)}')
    value=$(echo "$line" | awk '{print $2}')

    if [[ "$key" == "host" ]]; then
        IFS=' ' read -r -a host_array <<< "$value"
        for host in "${host_array[@]}"; do
            hosts+=("$host")
            ips+=("")  # Inicializar con vacío
        done
    elif [[ "$key" == "hostname" ]]; then
        for i in "${!hosts[@]}"; do
            if [[ -z "${ips[$i]}" ]]; then
                ips[$i]="$value"
            fi
        done
    fi
done < ~/.ssh/config

for i in "${!hosts[@]}"; do
    host="${hosts[$i]}"
    ip="${ips[$i]:-$host}"

    if ping -c1 -W1 "$ip" &>/dev/null; then
        printf "${BLUE}%s${RESET} - ${WHITE}%s${RESET} (${GREEN}online${RESET})\n" "$host" "$ip" >> "$onlineFile"
    else
        printf "${BLUE}%s${RESET} - ${WHITE}%s${RESET} (${RED}offline${RESET})\n" "$host" "$ip" >> "$offlineFile"
    fi
done

# Esperar a que todos los procesos en segundo plano terminen
wait

# Mostrar los resultados correctamente
printf "Offline:\n"
sort "$offlineFile"
printf "\n\033[1;33m_________________________________________________________\033[0m\n"
printf "\nOnline:\n"
sort "$onlineFile"

# Eliminar los archivos temporales
rm "$offlineFile" "$onlineFile"

printf "\n\033[1;33m_________________________________________________________\033[0m\n\n"