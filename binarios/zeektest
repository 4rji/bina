#!/usr/bin/env python3
# pip install requests

import requests
import json

ES_URL = "https://localhost:9200"
ES_USER = "elastic"
ES_PASS = "rancid12"
INDEX   = "filebeat-*"
VERIFY  = False   # pon ruta a http_ca.crt si quieres validar

def get_dns_events(size=10):
    query = {
        "size": size,
        "sort": [{"@timestamp": "desc"}],
        "query": {"term": {"event.dataset": "zeek.dns"}},
        "_source": [
            "@timestamp",
            "zeek.dns.query",
            "zeek.dns.qtype",
            "zeek.dns.rcode",
            "source.ip",
            "destination.ip"
        ]
    }
    url = f"{ES_URL}/{INDEX}/_search"
    resp = requests.post(
        url,
        auth=(ES_USER, ES_PASS),
        headers={"Content-Type": "application/json"},
        data=json.dumps(query),
        verify=VERIFY
    )

    if resp.status_code != 200:
        print("Error:", resp.status_code, resp.text)
        return []

    hits = resp.json().get("hits", {}).get("hits", [])
    return [h.get("_source", {}) for h in hits]

def markdown_table(headers, rows):
    # calcula anchos
    cols = len(headers)
    widths = [len(h) for h in headers]
    for r in rows:
        for i in range(cols):
            val = "" if i >= len(r) or r[i] is None else str(r[i])
            if len(val) > widths[i]:
                widths[i] = len(val)
    # helpers
    def fmt_row(cells):
        padded = []
        for i in range(cols):
            val = "" if i >= len(cells) or cells[i] is None else str(cells[i])
            padded.append(val.ljust(widths[i]))
        return "| " + " | ".join(padded) + " |"
    def sep():
        return "|-" + "-|-".join("-" * w for w in widths) + "-|"

    out = []
    out.append(fmt_row(headers))
    out.append(sep())
    for r in rows:
        out.append(fmt_row(r))
    return "\n".join(out)

def main():
    events = get_dns_events(10)
    if not events:
        print("No hay resultados")
        return

    headers = ["timestamp", "src_ip", "dst_ip", "query", "qtype", "rcode"]
    rows = []
    for e in events:
        rows.append([
            e.get("@timestamp", ""),
            (e.get("source") or {}).get("ip", ""),
            (e.get("destination") or {}).get("ip", ""),
            ((e.get("zeek") or {}).get("dns") or {}).get("query", ""),
            ((e.get("zeek") or {}).get("dns") or {}).get("qtype", ""),
            ((e.get("zeek") or {}).get("dns") or {}).get("rcode", ""),
        ])

    print(markdown_table(headers, rows))

if __name__ == "__main__":
    main()
