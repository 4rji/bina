#!/usr/bin/env python3

from Crypto.Cipher import AES
from Crypto.Protocol.KDF import PBKDF2
from Crypto.Random import get_random_bytes
import os
import sys

# Colores
CYAN = "\033[96m"
VERDE = "\033[92m"
AMARILLO = "\033[93m"
ROJO = "\033[91m"
RESET = "\033[0m"

def imprimir_mensaje(mensaje, color=RESET):
    print(f"{color}{mensaje}{RESET}")

def derivar_clave(frase):
    salt = get_random_bytes(16)  # Asegúrate de guardar este salt para la desencriptación
    clave = PBKDF2(frase, salt, dkLen=32)  # AES utiliza claves de 32 bytes para AES-256
    return clave, salt

def encriptar(archivo, frase):
    clave, salt = derivar_clave(frase)
    cipher_aes = AES.new(clave, AES.MODE_EAX)
    data = open(archivo, 'rb').read()
    ciphertext, tag = cipher_aes.encrypt_and_digest(data)

    with open(archivo + ".enc", 'wb') as file_out:
        file_out.write(salt)  # Guarda el salt al inicio del archivo
        file_out.write(cipher_aes.nonce)
        file_out.write(tag)
        file_out.write(ciphertext)

    imprimir_mensaje("Archivo encriptado.", VERDE)

def desencriptar(archivo, frase):
    file_in = open(archivo, 'rb')
    salt = file_in.read(16)  # Lee el salt del archivo
    nonce = file_in.read(16)
    tag = file_in.read(16)
    ciphertext = file_in.read()

    clave = PBKDF2(frase, salt, dkLen=32)
    cipher_aes = AES.new(clave, AES.MODE_EAX, nonce)
    data = cipher_aes.decrypt_and_verify(ciphertext, tag)

    with open(archivo.replace(".enc", ""), 'wb') as file_out:
        file_out.write(data)

    imprimir_mensaje("Archivo desencriptado.", VERDE)

def menu():
    print("\n" + CYAN + "_________________________________________________________" + RESET + "\n")
    imprimir_mensaje("1. Encriptar", AMARILLO)
    imprimir_mensaje("2. Desencriptar", AMARILLO)
    print(CYAN + "_________________________________________________________" + RESET)
    opcion = input(f"{CYAN}Elige una opción (1/2): {RESET}")
    return opcion

def main():
    if len(sys.argv) != 2:
        imprimir_mensaje("Uso: script.py [archivo]", ROJO)
        sys.exit(1)

    archivo = sys.argv[1]
    opcion = menu()

    frase = input(f"{AMARILLO}Ingresa la frase secreta: {RESET}")

    if opcion == '1':
        encriptar(archivo, frase)
    elif opcion == '2':
        desencriptar(archivo, frase)
    else:
        imprimir_mensaje("Opción no válida.", ROJO)
        sys.exit(1)

if __name__ == "__main__":
    main()

