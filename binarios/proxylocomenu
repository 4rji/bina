#!/usr/bin/env bash
clear
# Function to display messages with separators
echo_msg() {
    echo ""
    echo "=============================================="
    echo -e "\033[$1m$2\033[0m"
    echo "=============================================="
    echo ""
}


# Mensajes con colores
echo ""
echo -e "\n\033[1;33m_________________________________________________________\033[0m\n"
echo ""

echo -e "\033[1;34mFor only the PROXY, use the command\033[0m"
echo -e "\033[1;31mproxyloco\033[0m  =  which download, sets up the interface and displays its commands.\033[0m"
echo ""
echo -e "\033[1;34mTo view the commands available, use:\033[0m"
echo -e " \033[1;31mproxylococ\033[0m"
echo ""
echo -e "\033[1;34mFor agent:\033[0m"
echo -e "\033[1;32m./agent -connect IP:11601 -ignore-cert\033[0m"

echo -e "\n\033[1;33m_________________________________________________________\033[0m\n"
echo ""

# Show the list of downloads
echo -e "\033[31mAMD64\033[0m"
echo "1. ligolo-ng Agent 0.5.1 linux"
echo "2. ligolo-ng Proxy 0.5.1 linux"
echo ""
echo -e "\033[32mARM64\033[0m"
echo "3. ligolo-ng Agent 0.5.1 linux"
echo "4. ligolo-ng Proxy 0.5.1 linux"

echo ""
echo "_________________________________________________________"
echo ""

read -p "Choose the number of the download you want: " option
echo ""
echo "_________________________________________________________"
echo ""

# Download the chosen file with wget
case $option in
    1)
        wget -q https://github.com/nicocha30/ligolo-ng/releases/download/v0.5.1/ligolo-ng_agent_0.5.1_linux_amd64.tar.gz
        file="ligolo-ng_agent_0.5.1_linux_amd64.tar.gz"
        ;;
    2)
        wget -q https://github.com/nicocha30/ligolo-ng/releases/download/v0.5.1/ligolo-ng_proxy_0.5.1_linux_amd64.tar.gz
        file="ligolo-ng_proxy_0.5.1_linux_amd64.tar.gz"
        ;;
    3)
        wget -q https://github.com/nicocha30/ligolo-ng/releases/download/v0.5.1/ligolo-ng_agent_0.5.1_darwin_arm64.tar.gz
        file="ligolo-ng_agent_0.5.1_darwin_arm64.tar.gz"
        ;;
    4)
        wget -q https://github.com/nicocha30/ligolo-ng/releases/download/v0.5.1/ligolo-ng_proxy_0.5.1_linux_arm64.tar.gz
        file="ligolo-ng_proxy_0.5.1_linux_arm64.tar.gz"
        ;;
    *)
        echo_msg "31" "Invalid option."
        exit 1
        ;;
esac

echo ""
echo "_________________________________________________________"
echo ""

# Extract the downloaded file
tar xzvf $file
echo ""

# Show the message and options for Agent or Proxy
echo_msg "35" "More agents at: https://github.com/nicocha30/ligolo-ng/releases"
echo ""

read -n1 -p "Continue with Agent (a) or Proxy (p)? " choice
echo ""
echo "_________________________________________________________"
echo ""

# Check the choice and proceed
if [ "$choice" == "a" ]; then
    echo_msg "34" "Installing the agent..."
    read -p "What is the proxy's IP address? " IP
    echo "omit -ignore-cert for lab purposes"
    echo ""
    command="./agent -connect $IP:11601 -ignore-cert"
    
    echo_msg "36" "Executing command in 1 second:"
    echo ""
    echo " $command"
    echo ""
    echo "_________________________________________________________"
    echo ""

    sleep 1
    $command
elif [ "$choice" == "p" ]; then
    read -n1 -p "Do you want to start the interface? [Y/n] " start_interface
    start_interface=${start_interface:-Y}

    if [ "$start_interface" == "Y" ] || [ "$start_interface" == "y" ]; then
        sudo ip tuntap add user $USER mode tun ligolo
        sudo ip link set ligolo up
        ip a | grep ligolo
        sleep 1
        echo ""
    
        read -n1 -p "Do you want to start the proxy? [Y/n] " start_proxy
        start_proxy=${start_proxy:-Y}

        if [ "$start_proxy" == "Y" ] || [ "$start_proxy" == "y" ]; then
            echo_msg "32" "Starting the proxy..."
            echo ""
            echo "./proxy -selfcert"
            echo "_________________________________________________________"
            echo ""
            echo "Note: -selfcert is for lab use without an internet connection."
            echo ""
            sleep 1
            ./proxy -selfcert
        fi
    fi
else
    echo_msg "31" "Invalid option."
    exit 1
fi

echo ""
echo "_________________________________________________________"
echo ""