#!/usr/bin/env bash

# ==============================================
# Bloqueo por IPSET / IPTABLES
# - Si pasas un ARCHIVO: bloquea todas las IPs del archivo (una por línea).
# - Si pasas una IP: menú para bloquear/comprobar/desbloquear esa IP.
# - Sin argumentos: muestra uso.
# ==============================================

# Lista de paquetes a instalar
paquetes=("ipset" "iptables" "iptables-persistent" "kmod")

# Funciones de verificación de paquetes
paquete_instalado_apt() { dpkg -l "$1" | grep -q '^ii'; }
paquete_instalado_yum() { yum list installed "$1" &> /dev/null; }
paquete_instalado_dnf() { dnf list installed "$1" &> /dev/null; }
paquete_instalado_pacman() { pacman -Qi "$1" &> /dev/null; }

# Detectar el sistema operativo
if [ -f /etc/os-release ]; then
  . /etc/os-release
  OS=$ID
fi

# Instalar paquetes según SO
for paquete in "${paquetes[@]}"; do
  case $OS in
    "debian"|"ubuntu"|"kali")
      if ! paquete_instalado_apt "$paquete"; then
        echo "Instalando $paquete..."
        sudo apt-get install -y "$paquete"
      fi
      ;;
    "centos"|"rhel")
      if ! paquete_instalado_yum "$paquete"; then
        echo "Instalando $paquete..."
        sudo yum install -y "$paquete"
      fi
      ;;
    "fedora")
      if ! paquete_instalado_dnf "$paquete"; then
        echo "Instalando $paquete..."
        sudo dnf install -y "$paquete"
      fi
      ;;
    "arch")
      if ! paquete_instalado_pacman "$paquete"; then
        echo "Instalando $paquete..."
        sudo pacman -S --noconfirm "$paquete"
      fi
      ;;
    *) ;;
  esac
done

# -------------------------
# Utilidades
# -------------------------

# Mensaje con color (31 rojo, 34 azul, 35 magenta por default, 32 verde, 33 amarillo)
echo_msg() {
  local msg="$1"
  local color="${2:-35}"
  echo -e "\n=============================================="
  echo -e "\033[1;${color}m${msg}\033[0m"
  echo -e "==============================================\n"
}

# Asegurar ipset y regla iptables
ensure_set() { sudo ipset list blacklist &>/dev/null || sudo ipset create blacklist hash:ip; }
ensure_iptables() {
  sudo iptables -C INPUT -m set --match-set blacklist src -j DROP &>/dev/null || \
  sudo iptables -I INPUT -m set --match-set blacklist src -j DROP
}

# Guardar configuración
save_conf() {
  sudo ipset save | sudo tee /etc/ipset.conf > /dev/null
  sudo iptables-save | sudo tee /etc/iptables/rules.v4 > /dev/null
}

# Uso
display_usage() {
  echo_msg "Uso" 34
  cat <<EOF
  $0 <archivo>       → Bloquea todas las IPs listadas (una por línea)
  $0 <IP>            → Menú para bloquear/comprobar/desbloquear esa IP
  $0                 → Mostrar esta ayuda

Ejemplos:
  $0 lista_ips.txt
  $0 203.0.113.10
EOF
}

# Bloquear IPs desde archivo
block_file() {
  local file="$1"
  echo_msg "Cargando y bloqueando IPs desde: $file" 34
  sudo ipset flush blacklist
  # Ignora líneas vacías y comentarios (#)
  while IFS= read -r ip; do
    [[ -z "$ip" || "$ip" =~ ^[[:space:]]*# ]] && continue
    sudo ipset add blacklist "$ip" 2>/dev/null
  done < "$file"
  ensure_iptables
  save_conf
  echo_msg "Bloqueo aplicado desde $file" 34
}

# Bloquear IP única
block_ip() {
  echo_msg "Bloqueando IP: $1" 31
  sudo ipset add blacklist "$1" 2>/dev/null
  ensure_iptables
  echo_msg "IP $1 bloqueada" 31
}

# Comprobar IP
check_ip() {
  if sudo ipset test blacklist "$1" &>/dev/null; then
    echo_msg "La IP $1 está en el blacklist" 34
  else
    echo_msg "La IP $1 NO está en el blacklist" 34
  fi
}

# Eliminar IP
delete_ip() {
  echo_msg "Eliminando IP: $1" 32
  sudo ipset test blacklist "$1" &>/dev/null && sudo ipset del blacklist "$1"
  echo_msg "IP $1 eliminada si existía" 32
}

# -------------------------
# Inicio
# -------------------------

ensure_set
tput civis 2>/dev/null

# Sin argumentos → ayuda
if [[ $# -eq 0 ]]; then
  display_usage
  tput cnorm 2>/dev/null
  exit 0
fi

ARG="$1"

# Si es archivo legible → bloquear archivo
if [[ -f "$ARG" && -r "$ARG" ]]; then
  block_file "$ARG"
  tput cnorm 2>/dev/null
  exit 0
fi

# Si parece IP → menú de acciones
IP_REGEX='^([0-9]{1,3}\.){3}[0-9]{1,3}(/[0-9]{1,2})?$'
if [[ "$ARG" =~ $IP_REGEX ]]; then
  IP="$ARG"
  while true; do
    echo -e "\nAcciones para IP $IP:"
    echo "  b) Bloquear"
    echo "  c) Comprobar"
    echo "  d) Desbloquear"
    echo "  q) Salir"
    read -n1 -p "Elige opción: " action
    echo
    case "$action" in
      b|B) block_ip "$IP" ;;
      c|C) check_ip "$IP" ;;
      d|D) delete_ip "$IP" ;;
      q|Q) save_conf; break ;;
      *) echo_msg "Opción inválida" 33 ;;
    esac
  done
  tput cnorm 2>/dev/null
  exit 0
fi

# Si no es archivo ni IP válida → ayuda
echo_msg "Argumento no reconocido: $ARG" 33
display_usage
tput cnorm 2>/dev/null
exit 1
