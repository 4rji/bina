#!/usr/bin/python
# -*- coding: utf-8 -*-
import dpkt
import socket
import geoip2.database
import optparse

# Inicializar el lector de la base de datos MMDB
reader = geoip2.database.Reader('/opt/GeoIP/GeoLite2-City.mmdb')

def retKML(ip):
    try:
        response = reader.city(ip)
        longitude = response.location.longitude
        latitude = response.location.latitude
        kml = (
               '<Placemark>\n'
               '<name>%s</name>\n'
               '<Point>\n'
               '<coordinates>%6f,%6f</coordinates>\n'
               '</Point>\n'
               '</Placemark>\n'
               ) % (ip, longitude, latitude)
        return kml
    except Exception as e:
        return ''

def plotIPs(pcap):
    kmlPts = ''
    for (ts, buf) in pcap:
        try:
            eth = dpkt.ethernet.Ethernet(buf)
            ip = eth.data
            src = socket.inet_ntoa(ip.src)
            srcKML = retKML(src)
            dst = socket.inet_ntoa(ip.dst)
            dstKML = retKML(dst)
            kmlPts += srcKML + dstKML
        except Exception as e:
            pass
    return kmlPts

def main():
    parser = optparse.OptionParser('usage %prog -p <pcap file>')
    parser.add_option('-p', dest='pcapFile', type='string', help='specify pcap filename')
    (options, args) = parser.parse_args()
    if options.pcapFile is None:
        print(parser.usage)
        exit(0)
    pcapFile = options.pcapFile
    f = open(pcapFile, 'rb')  # Make sure to open in binary mode for pcap files
    pcap = dpkt.pcap.Reader(f)

    kmlheader = '<?xml version="1.0" encoding="UTF-8"?>\n<kml xmlns="http://www.opengis.net/kml/2.2">\n<Document>\n'
    kmlfooter = '</Document>\n</kml>\n'
    kmldoc = kmlheader + plotIPs(pcap) + kmlfooter

    # Escribir el KML en un archivo
    with open('output.kml', 'w') as outFile:
        outFile.write(kmldoc)
    print("KML file has been saved to 'output.kml'.")

if __name__ == '__main__':
    main()

