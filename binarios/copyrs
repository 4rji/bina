#!/usr/bin/env bash

echo
echo "============================================================"
echo "                       File Transfer                        "
echo "============================================================"
echo

# Check if a file name is provided as an argument
if [ "$#" -ne 1 ]; then
    echo "Usage: $0 filename"
    echo ""
    exit 1
fi

# The file to be transferred
FILE=$1

echo ""

CONFIG_FILE="$HOME/.ssh/config"
declare -A host_user_map
declare -A host_ip_map
declare -A host_port_map

# Check if SSH config file exists
if [[ ! -f "$CONFIG_FILE" ]]; then
    echo "SSH configuration file does not exist."
    echo ""
    exit 1
fi

# Read hosts, usernames, hostnames, and ports from SSH config file
current_host=""
while IFS= read -r line || [[ -n "$line" ]]; do
    line="$(echo "$line" | sed 's/^\s*//;s/\s*$//')" # Trim leading and trailing whitespace
    if [[ $line =~ ^Host\ +([^*]+)$ ]]; then
        current_host=${BASH_REMATCH[1]}
    elif [[ -z "$line" ]]; then
        current_host="" # Reset current_host on empty line
    elif [[ $current_host != "" ]]; then
        if [[ $line =~ ^User\ +(.+)$ ]]; then
            host_user_map["$current_host"]=${BASH_REMATCH[1]}
        elif [[ $line =~ ^[Hh][Oo][Ss][Tt][Nn][Aa][Mm][Ee]\ +(.+)$ ]]; then
            host_ip_map["$current_host"]=${BASH_REMATCH[1]}
        elif [[ $line =~ ^Port\ +(.+)$ ]]; then
            host_port_map["$current_host"]=${BASH_REMATCH[1]}
        fi
    fi
done < "$CONFIG_FILE"

if [ ${#host_user_map[@]} -eq 0 ]; then
    echo "No hosts found in the SSH configuration file."
    exit 1
fi

# Prepare a list of available hosts for fzf
available_hosts=$(printf "%s\n" "${!host_user_map[@]}")

# Display the list of available hosts in a numbered format
if [[ -z "$available_hosts" ]]; then
    echo "Error: No hosts available for selection."
    exit 1
fi

# Print the available hosts in a two-column format
counter=1
columns=2
column_width=30
echo "Available hosts for transfer:"
for host in "${!host_user_map[@]}"; do
    printf "%-${column_width}s" "$counter) $host"
    if (( counter % columns == 0 )); then
        echo ""
    fi
    ((counter++))
done
if (( (counter - 1) % columns != 0 )); then
    echo ""
fi

# Check if fzf is installed
if ! command -v fzf >/dev/null 2>&1; then
    echo "Error: fzf is not installed. Please install fzf to use interactive host selection."
    exit 1
fi

# Use fzf for interactive host selection
host_choice=$(echo "$available_hosts" | fzf --prompt="Select host: ")
if [[ -z "$host_choice" ]]; then
    echo "No host selected. Exiting."
    exit 1
fi

echo "You have selected: $host_choice"

USER="${host_user_map[$host_choice]}"
IP="${host_ip_map[$host_choice]}"
PORT="${host_port_map[$host_choice]:-22}" # Default to port 22 if not specified

DESTINATION="$USER@$IP"

echo "------------------------------------------------------------"
echo ""
echo "Transferring '$FILE' to $DESTINATION  "
echo "rsync -avz --progress -e "ssh -p $PORT" $FILE $DESTINATION:~/"
echo ""
echo "------------------------------------------------------------"
echo ""

# Execute rsync command
rsync -avz --progress -e "ssh -p $PORT" $FILE $DESTINATION:~/

echo ""
echo "-----------------------------------------------------"
echo ""
