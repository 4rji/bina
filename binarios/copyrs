#!/usr/bin/env bash

# Colores ANSI
BLUE="\033[1;34m"
GREEN="\033[1;32m"
YELLOW="\033[1;33m"
RED="\033[1;31m"
RESET="\033[0m"
BOLD="\033[1m"

echo
echo -e "${BOLD}${YELLOW}============================================================"
echo "                       File Transfer                        "
echo -e "============================================================${RESET}"
echo

# Check if a file name is provided as an argument
if [ "$#" -ne 1 ]; then
    echo -e "${RED}Usage: $0 filename${RESET}"
    echo ""
    exit 1
fi

FILE=$1
echo ""

CONFIG_FILE="$HOME/.ssh/config"
declare -A host_user_map
declare -A host_ip_map
declare -A host_port_map

if [[ ! -f "$CONFIG_FILE" ]]; then
    echo -e "${RED}SSH configuration file does not exist.${RESET}"
    echo ""
    exit 1
fi

current_host=""
while IFS= read -r line || [[ -n "$line" ]]; do
    line="$(echo "$line" | sed 's/^\s*//;s/\s*$//')"
    if [[ $line =~ ^Host\ +([^*]+)$ ]]; then
        current_host=${BASH_REMATCH[1]}
    elif [[ -z "$line" ]]; then
        current_host=""
    elif [[ $current_host != "" ]]; then
        if [[ $line =~ ^User\ +(.+)$ ]]; then
            host_user_map["$current_host"]=${BASH_REMATCH[1]}
        elif [[ $line =~ ^[Hh][Oo][Ss][Tt][Nn][Aa][Mm][Ee]\ +(.+)$ ]]; then
            host_ip_map["$current_host"]=${BASH_REMATCH[1]}
        elif [[ $line =~ ^Port\ +(.+)$ ]]; then
            host_port_map["$current_host"]=${BASH_REMATCH[1]}
        fi
    fi
done < "$CONFIG_FILE"

if [ ${#host_user_map[@]} -eq 0 ]; then
    echo -e "${RED}No hosts found in the SSH configuration file.${RESET}"
    exit 1
fi

available_hosts=$(printf "%s\n" "${!host_user_map[@]}")

if [[ -z "$available_hosts" ]]; then
    echo -e "${RED}Error: No hosts available for selection.${RESET}"
    exit 1
fi

echo -e "${BLUE}${BOLD}Available hosts for transfer:${RESET}"
counter=1
columns=2
column_width=30
for host in "${!host_user_map[@]}"; do
    printf "${BLUE}%2d)${RESET} ${GREEN}%-${column_width}s${RESET}" "$counter" "$host"
    if (( counter % columns == 0 )); then
        echo ""
    fi
    ((counter++))
done
if (( (counter - 1) % columns != 0 )); then
    echo ""
fi

if ! command -v fzf >/dev/null 2>&1; then
    echo -e "${RED}Error: fzf is not installed. Please install fzf to use interactive host selection.${RESET}"
    exit 1
fi

host_choice=$(echo "$available_hosts" | fzf --prompt="Select host: ")
if [[ -z "$host_choice" ]]; then
    echo -e "${YELLOW}No host selected. Exiting.${RESET}"
    exit 1
fi

echo -e "${GREEN}You have selected: $host_choice${RESET}"

USER="${host_user_map[$host_choice]}"
IP="${host_ip_map[$host_choice]}"
PORT="${host_port_map[$host_choice]:-22}"

DESTINATION="$USER@$IP"

echo -e "${BOLD}------------------------------------------------------------${RESET}"
echo ""
echo -e "${GREEN}Transferring '${FILE}' to ${DESTINATION}${RESET}"
echo -e "${YELLOW}rsync -avz --progress -e \"ssh -p $PORT\" $FILE $DESTINATION:~/${RESET}"
echo ""
echo -e "${BOLD}------------------------------------------------------------${RESET}"
echo ""

rsync -avz --progress -e "ssh -p $PORT" "$FILE" "$DESTINATION:~/"

echo ""
echo -e "${BOLD}-----------------------------------------------------${RESET}"
echo ""