#!/usr/bin/env bash

# Función para mostrar mensajes con formato limpio y colores
echo_msg() {
    echo ""
    echo $'\033[1;34m_________________________________________________________\033[0m'
    echo $'\033[1;36m'"$1"$'\033[0m'
    echo $'\033[1;34m_________________________________________________________\033[0m'
    echo ""
}

# Validar que se pase el archivo como argumento
if [ "$#" -ne 1 ]; then
    echo_msg $'\033[1;33mUso: ./block_domains.sh <archivo_dominios.txt>\033[0m'
    exit 1
fi

DOMAINS_FILE="$1"
ZONE_FILE="/etc/bind/db.blocked"
NAMED_CONF="/etc/bind/named.conf.local"

# Verificar si el archivo de dominios existe
if [ ! -f "$DOMAINS_FILE" ]; then
    echo_msg $'\033[1;33mEl archivo no existe. Creando archivo de dominios...\033[0m'
    sudo touch "$DOMAINS_FILE"
fi

# Crear archivo de zona si no existe
if [ ! -f "$ZONE_FILE" ]; then
    echo_msg $'\033[1;32mCreando archivo de zona en /etc/bind/db.blocked...\033[0m'
    sudo bash -c "cat <<EOL > $ZONE_FILE
\$TTL    86400
@       IN      SOA     localhost. root.localhost. (
                        2         ; Serial
                        604800    ; Refresh
                        86400     ; Retry
                        2419200   ; Expire
                        604800 )  ; Minimum TTL
        IN      NS      localhost.
        IN      A       127.0.0.1
EOL"
fi

# Procesar cada dominio en el archivo
while IFS= read -r DOMAIN; do
    if [ -z "$DOMAIN" ]; then
        continue
    fi

    # Verificar si el dominio ya está bloqueado
    if ! grep -q "zone \"$DOMAIN\"" "$NAMED_CONF"; then
        echo_msg $'\033[1;31mBloqueando dominio:\033[0m '"$DOMAIN"
        sudo bash -c "echo 'zone \"$DOMAIN\" {' >> $NAMED_CONF"
        sudo bash -c "echo '    type master;' >> $NAMED_CONF"
        sudo bash -c "echo '    file \"$ZONE_FILE\";' >> $NAMED_CONF"
        sudo bash -c "echo '};' >> $NAMED_CONF"
    else
        echo_msg $'\033[1;33mEl dominio ya está bloqueado:\033[0m '"$DOMAIN"
    fi
done < "$DOMAINS_FILE"

# Agregar nuevos dominios si el archivo cambia
read -p $'\033[1;35m¿Deseas agregar un nuevo dominio para bloquear? (s/n): \033[0m' ADD_NEW
if [[ "$ADD_NEW" == "s" ]]; then
    read -p $'\033[1;36mIntroduce el nuevo dominio: \033[0m' NEW_DOMAIN
    if ! grep -q "^$NEW_DOMAIN$" "$DOMAINS_FILE"; then
        echo "$NEW_DOMAIN" | sudo tee -a "$DOMAINS_FILE" > /dev/null
        echo_msg $'\033[1;32mDominio añadido a la lista:\033[0m '"$NEW_DOMAIN"
        sudo bash -c "echo 'zone \"$NEW_DOMAIN\" {' >> $NAMED_CONF"
        sudo bash -c "echo '    type master;' >> $NAMED_CONF"
        sudo bash -c "echo '    file \"$ZONE_FILE\";' >> $NAMED_CONF"
        sudo bash -c "echo '};' >> $NAMED_CONF"
    else
        echo_msg $'\033[1;33mEl dominio ya está en la lista:\033[0m '"$NEW_DOMAIN"
    fi
fi

# Recargar configuración de BIND9
echo_msg $'\033[1;34mRecargando configuración de BIND9...\033[0m'
sudo systemctl reload bind9

echo_msg $'\033[1;32mEl proceso ha finalizado correctamente.\033[0m'


echo -e "\n\033[1;33m_________________________________________________________\033[0m\n"
echo "\033[1;33mcat /etc/bind/named.conf.local\033[0m "

echo ""
cat /etc/bind/named.conf.local 
echo -e "\n\033[1;33m_________________________________________________________\033[0m\n"


