#!/usr/bin/env bash
# Script para crear un contenedor LUKS interactivamente
# Pregunta tamaño (en MB) y nombre, crea el contenedor, lo formatea y lo monta.
# Luego muestra cómo desmontar y cerrar.

set -euo pipefail

# Pedir datos al usuario
echo "Leyendo tamaño y nombre del contenedor"
read -p "Tamaño del contenedor en MB: " SIZE_MB
read -p "Nombre del contenedor (sin extensión): " NAME

# Variables
target_file="${NAME}.luks"
mapper_name="map_${NAME}"
mount_point="/mnt/${NAME}"

# Crear contenedor con dd
echo "Ejecutando: dd if=/dev/zero of=${target_file} bs=1M count=${SIZE_MB}"
dd if=/dev/zero of="${target_file}" bs=1M count="${SIZE_MB}"

# Inicializar LUKS
echo "Ejecutando: sudo cryptsetup luksFormat ${target_file}"
sudo cryptsetup luksFormat "${target_file}"

echo "Ejecutando: sudo cryptsetup open ${target_file} ${mapper_name}"
sudo cryptsetup open "${target_file}" "${mapper_name}"

echo "Ejecutando: sudo mkfs.ext4 /dev/mapper/${mapper_name}"
sudo mkfs.ext4 "/dev/mapper/${mapper_name}"

echo "Ejecutando: sudo mkdir -p ${mount_point}"
sudo mkdir -p "${mount_point}"

echo "Ejecutando: sudo mount /dev/mapper/${mapper_name} ${mount_point}"
sudo mount "/dev/mapper/${mapper_name}" "${mount_point}"

# Instrucciones para desmontar y cerrar

cat << EOF

Contenedor '${target_file}' creado y montado en: ${mount_point}

Para desmontar y cerrar, ejecuta:
  sudo umount ${mount_point}
  sudo cryptsetup close ${mapper_name}

Para montarlo de nuevo después:
  sudo cryptsetup open ${target_file} ${mapper_name}
  sudo mkdir -p ${mount_point}
  sudo mount /dev/mapper/${mapper_name} ${mount_point}
EOF