#!/usr/bin/env bash

# Lista de paquetes a instalar
paquetes=("wireguard" "resolvconf" )

paquete_instalado_apt() { dpkg -l "$1" | grep -q '^ii'; }
paquete_instalado_yum() { yum list installed "$1" &>/dev/null; }
paquete_instalado_dnf() { dnf list installed "$1" &>/dev/null; }
paquete_instalado_pacman(){ pacman -Qi "$1" &>/dev/null; }

# Detectar OS
if [ -f /etc/os-release ]; then
  . /etc/os-release
  OS=$ID
fi

# Instalar paquetes
for paquete in "${paquetes[@]}"; do
  case $OS in
    debian|ubuntu|kali)
      if ! paquete_instalado_apt "$paquete"; then sudo apt-get install -y "$paquete"; fi;;
    centos|rhel)
      if ! paquete_instalado_yum "$paquete"; then sudo yum install -y "$paquete"; fi;;
    fedora)
      if ! paquete_instalado_dnf "$paquete"; then sudo dnf install -y "$paquete"; fi;;
    arch)
      if ! paquete_instalado_pacman "$paquete"; then sudo pacman -S --noconfirm "$paquete"; fi;;
    *) :;;
  esac
done

# Setup WireGuard si se pasÃ³ un .conf
setup_wireguard() {
  echo -e "\033[0;34mCopying config to /etc/wireguard/\033[0m"
  sudo cp "$config_file" "/etc/wireguard/$file_name"
  sudo chmod 600 "/etc/wireguard/$file_name"
  echo -e "\033[0;35mBringing up...\033[0m"
  sudo wg-quick up "$interface_name"
  echo -e "\033[0;36mStatus:\033[0m"
  sudo wg
  echo "Connecting."
  sleep .5
  echo "Connecting.."
  sleep 1
  echo -e "\033[0;31mPublic IP:\033[0m"
  curl -s ifconfig.me; echo
}

# Args
if [ "$1" == "-c" ]; then
  crontab_mode=true
elif [ -z "$1" ]; then
  echo -e "\033[0;31mError: No configuration file provided or -c flag not used."
  echo -e "Usage: $0 [-c | path/to/file.conf]\033[0m"
  exit 1
else
  config_file=$1
  file_name=$(basename "$config_file")
  interface_name="${file_name%.*}"
  setup_wireguard
fi

# Inferir interfaz si no viene de .conf
interface_name="${interface_name:-bb8}"

echo -e "\n\033[1;33m_________________________________________________________\033[0m\n"

# check_wg.sh (asegura enlace cada minuto)
echo -e "\033[0;32mCreating /usr/local/bin/check_wg.sh...\033[0m"
sudo tee /usr/local/bin/check_wg.sh >/dev/null <<EOF
#!/bin/bash
INTERFACE="${interface_name}"
if ! wg show "\$INTERFACE" >/dev/null 2>&1; then
  sudo wg-quick up "\$INTERFACE"
fi
EOF
sudo chmod +x /usr/local/bin/check_wg.sh

# bb8reconnect.sh (reconecta forzado cada 30 min)
echo -e "\033[0;32mCreating /usr/local/bin/bb8reconnect.sh...\033[0m"
sudo tee /usr/local/bin/bb8reconnect.sh >/dev/null <<EOF
#!/bin/bash
IF="${interface_name}"
sudo wg-quick down "\$IF" 2>/dev/null || true
sudo wg-quick up "\$IF"
EOF
sudo chmod +x /usr/local/bin/bb8reconnect.sh

# Cron root: cada minuto check_wg, cada 30 min reconnect
echo -e "\033[0;32mUpdating root crontab...\033[0m"
( sudo crontab -l 2>/dev/null | grep -v '/usr/local/bin/check_wg.sh' | grep -v '/usr/local/bin/bb8reconnect.sh'; \
  echo "* * * * * /usr/local/bin/check_wg.sh"; \
  echo "*/30 * * * * /usr/local/bin/bb8reconnect.sh" ) | sudo crontab -

echo -e "\n\033[1;33m_________________________________________________________\033[0m\n"
echo -e "\033[1;37mADVISORY: This script should be used for authorized penetration testing and/or educational purposes only.\033[0m"
echo -e "\n\033[1;33m_________________________________________________________\033[0m\n"

sudo crontab -l
echo
