#!/usr/bin/env bash

#para mac :
#ifconfig | awk '/^[a-z]/ {iface=$1} /inet / && !/inet6/ {print iface, $2}'

# Color codes
green="\e[32m"
yellow="\e[33m"
blue="\e[34m"
reset="\e[0m"

# Verificar si el script se ejecuta con el argumento -s
show_nmcli_info=false
if [[ $1 == "-s" ]]; then
    show_nmcli_info=true
fi

# Agregar un renglón de separación
echo -e "\e[33m" # Amarillo
echo ""
ifconfig | grep inet | grep -v 127.0.0.1 | sed 's/^/    /'
echo -e "\e[31m" # Rojo
echo ""

# Función para obtener la interfaz de red
get_network_interface() {
    # Verificar si wlan0 existe
    if ifconfig wlan0 &>/dev/null; then
        echo "wlan0"
    else
        # Obtener el nombre de la interfaz de red
        interface=$(ip route | awk '/default/ {print $5}')
        echo "$interface"
    fi
}

# Obtener la interfaz de red
network_interface=$(get_network_interface)

# Mostrar la dirección IP local
ip -4 addr show | awk '/inet/ && !/127.0.0.1/ {split($2, a, "/"); printf "\t\t\t\t%s: %s\n", $NF, a[1]}'
echo ""
echo -e "\e[34m                  ___________________________________________________\e[0m"
echo -e "\n\t\t\t\tTu IP de $network_interface es: $(ifconfig "$network_interface" | grep "inet " | awk '{print $2}')\n"

# Si se pasó el argumento -s, ejecutar nmcli device show
if $show_nmcli_info; then
    echo -e "\nEjecutando nmcli device show:\n"
    nmcli device show
fi

# Mostrar el mensaje informativo en verde y agregar línea azul debajo
echo -e "${green}For more info, execute -s (nmcli device show)${reset}"
echo -e "${green}To get a dhcp address sudo dhclient eth1${reset}"
echo -e "${blue}___________________________________________________${reset}"