#!/usr/bin/env bash

# Function to display important messages with formatting and color
echo_msg() {
    echo -e "\e[35m==============================================\e[0m"
    echo -e "\e[35m$1\e[0m"
    echo -e "\e[35m==============================================\e[0m"
}

# Function to execute commands with sudo
run_sudo() {
    sudo "$@"
}

# Check if firewall-cmd is installed
if ! command -v firewall-cmd &> /dev/null; then
    echo ""
    echo -e "\e[31mfirewall-cmd is not installed. Installing now...\e[0m"
    echo ""
    # For RedHat/CentOS-based distributions
    if command -v yum &> /dev/null; then
        run_sudo yum install -y firewalld
    # For Debian/Ubuntu-based distributions
    elif command -v apt &> /dev/null; then
        run_sudo apt update
        run_sudo apt install -y firewalld
    else
        echo ""
        echo -e "\e[31mPackage manager not detected. Please install firewalld manually.\e[0m"
        echo ""
        exit 1
    fi
    # Start and enable firewalld
    run_sudo systemctl start firewalld
    run_sudo systemctl enable firewalld
fi

# Ensure firewalld is active
if ! run_sudo systemctl is-active --quiet firewalld; then
    echo ""
    echo -e "\e[33mStarting firewalld...\e[0m"
    echo ""
    run_sudo systemctl start firewalld
fi

echo_msg "Active Zones Available"

# Retrieve active zones
active_zones=$(run_sudo firewall-cmd --get-active-zones | awk '/^[^ ]/{print $1}')

# Check if there are active zones
if [[ -z "$active_zones" ]]; then
    echo ""
    echo -e "\e[31mNo active zones found. Exiting...\e[0m"
    echo ""
    exit 0
fi

# Display active zones
for zone in $active_zones; do
    echo -e "\e[32mZone: $zone - ACTIVE\e[0m"
done

echo ""
echo -e "\e[36m_________________________________________________________\e[0m"
echo ""

# Prompt user to select a zone
echo -e "\e[34mEnter the name of the zone you want to configure:\e[0m"
read -p "> " selected_zone

# Verify if the selected zone is active
if ! echo "$active_zones" | grep -qw "$selected_zone"; then
    echo ""
    echo -e "\e[31mThe zone '$selected_zone' is not active or does not exist. Exiting...\e[0m"
    echo ""
    exit 1
fi

echo ""
echo_msg "Current Configuration of '$selected_zone'"

# Display current zone configuration
run_sudo firewall-cmd --zone="$selected_zone" --list-all

echo ""
echo -e "\e[36m_________________________________________________________\e[0m"
echo ""

# Define a list of 14 common services based on your provided list
common_services=(
    http
    https
    ssh
    ftp
    dns
    smtp
    pop3
    imap
    samba
    nfs
    kerberos
    mariadb
    redis
    docker-registry
)

echo_msg "Common Services Available to Add"

# Display the common services in columns
printf "%-20s %-20s %-20s %-20s\n" "${common_services[@]}"

echo ""
echo -e "\e[36m_________________________________________________________\e[0m"
echo ""

echo_msg "All Available Services"

echo ""
echo -e "\e[34mYou can view all available services by running the following command:\e[0m"
echo -e "\e[33msudo firewall-cmd --get-services | column\e[0m"
echo ""

# Prompt user to add services
echo -e "\e[34mEnter the services you want to allow (separated by spaces):\e[0m"
read -p "> " services_input

echo ""

# Retrieve all available services
available_services=$(run_sudo firewall-cmd --get-services)

# Convert available services to an array
IFS=' ' read -r -a services_array <<< "$available_services"

# Validate and add each service
if [[ -n "$services_input" ]]; then
    for service in $services_input; do
        if [[ " ${services_array[@]} " =~ " ${service} " ]]; then
            run_sudo firewall-cmd --zone="$selected_zone" --add-service="$service" --permanent
            echo -e "\e[32mService '$service' added to zone '$selected_zone'.\e[0m"
        else
            echo -e "\e[31mService '$service' is not valid or not available.\e[0m"
        fi
    done
else
    echo -e "\e[33mNo services were added.\e[0m"
fi

echo ""
echo_msg "Current Allowed Services in '$selected_zone'"

# Display updated services
run_sudo firewall-cmd --zone="$selected_zone" --list-services

echo ""
echo -e "\e[36m_________________________________________________________\e[0m"
echo ""

# Prompt user to add ports
echo -e "\e[34mEnter the ports you want to allow (e.g., 8080/tcp 53/udp):\e[0m"
read -p "> " ports_input

echo ""

# Validate and add each port
if [[ -n "$ports_input" ]]; then
    for port in $ports_input; do
        if [[ "$port" =~ ^[0-9]+/(tcp|udp)$ ]]; then
            run_sudo firewall-cmd --zone="$selected_zone" --add-port="$port" --permanent
            echo -e "\e[32mPort '$port' added to zone '$selected_zone'.\e[0m"
        else
            echo -e "\e[31mPort '$port' has an invalid format. It should be NUMBER/tcp or NUMBER/udp.\e[0m"
        fi
    done
else
    echo -e "\e[33mNo ports were added.\e[0m"
fi

echo ""
echo -e "\e[34mReloading firewall to apply changes...\e[0m"
echo ""
run_sudo firewall-cmd --reload

echo ""
echo_msg "Updated Configuration of '$selected_zone'"

# Display updated zone configuration
run_sudo firewall-cmd --zone="$selected_zone" --list-all

echo ""
echo -e "\e[32mFirewall configuration updated successfully.\e[0m"
echo ""