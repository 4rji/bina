#!/bin/bash

# Función para mostrar el mensaje de ayuda y preguntar si desea continuar
show_help_and_confirm() {
    echo ""
    echo -e "\033[1;32m Si no funciona (secreto, linpi) el problema son dependencias de python:\033[0m"
    echo ""
    echo -e "\033[1;33m""Para instalar pip requirements: pyreque \033[0m"
    echo ""
    echo ""
echo -e "\033[1;34m_________________________________________________________\033[0m"
    exit
}

# Verificar si se pasó el argumento -h
if [ "$1" == "-h" ]; then
    show_help_and_confirm
fi
echo ""
#echo "si no funciona instalar con el script:"
#echo "pyreque"
#pip3 install pycryptodome




# Lista de paquetes a instalar
paquetes=("python3" "python3-pip" )

# Función para verificar si un paquete está instalado (Debian/Ubuntu/Kali)
paquete_instalado_apt() {  
    dpkg -l "$1" | grep -q '^ii'  
}

# Función para verificar si un paquete está instalado (CentOS/RHEL)
paquete_instalado_yum() {
    yum list installed "$1" &> /dev/null
}

# Función para verificar si un paquete está instalado (Fedora)
paquete_instalado_dnf() {
    dnf list installed "$1" &> /dev/null
}

# Función para verificar si un paquete está instalado (Arch Linux)
paquete_instalado_pacman() {
    pacman -Qi "$1" &> /dev/null
}

# Detectar el sistema operativo
if [ -f /etc/os-release ]; then
    . /etc/os-release
    OS=$ID
fi

# Instalar paquetes basados en el sistema operativo
for paquete in "${paquetes[@]}"; do
    case $OS in
        "debian"|"ubuntu"|"kali")
            if ! paquete_instalado_apt "$paquete"; then
                echo "Instalando el paquete $paquete..."
                sudo apt-get install -y "$paquete"
            fi
            ;;
        "centos"|"rhel")
            if ! paquete_instalado_yum "$paquete"; then
                echo "Instalando el paquete $paquete..."
                sudo yum install -y "$paquete"
            fi
            ;;
        "fedora")
            if ! paquete_instalado_dnf "$paquete"; then
                echo "Instalando el paquete $paquete..."
                sudo dnf install -y "$paquete"
            fi
            ;;
        "arch")
            if ! paquete_instalado_pacman "$paquete"; then
                echo "Instalando el paquete $paquete..."
                sudo pacman -S --noconfirm "$paquete"
            fi
            ;;
        *)
            ;;
    esac
done







#!/bin/bash

echo -e "\033[1;32mEl comando que este script ejecuta es:\033[0m"
    echo ""
    echo -e "\033[1;33mpython3 -m http.server 80\033[0m"



echo -e "\n\033[1;37m_________________________________________________________\033[0m\n"

echo -e "\033[0;34mejecutar linpi para descomprimir los otros binarios y tambien pyreque como sudo para secreto\033[0m"

echo -e "\n\033[1;37m_________________________________________________________\033[0m\n"



echo ""
echo -e "\033[1;34m_________________________________________________________\033[0m"
#echo ""

#descomprimir linpeas porque github no me deja subirlo sin encriptar
echo "PARA descomprimir linpeas, winpeas, lineenum, ejecutar "
echo "linpi"
echo -e "\n\033[1;34m_________________________________________________________\033[0m\n"



# Variables para opciones predeterminadas
default_port="80"
port=$default_port

# Directorio de destino para los archivos Apache
destination_dir="/opt/4rji/bin"

# Archivo de lista de nombres de archivos
#file_list="/opt/4rji/bin/listaapache"

echo ""
# Pregunta combinada
read -p "¿Deseas utilizar un puerto diferente al predeterminado ($default_port)? [S/n] " custom_port
custom_port="${custom_port:-n}"

if [[ $custom_port =~ ^[Ss]$ ]]; then
    # Solicitar el puerto personalizado
    read -p "Por favor, introduce el puerto deseado: " port
fi

# Copiar archivos de la listaapache a /tmp/apache
if [ ! -d "$destination_dir" ]; then
    mkdir -p "$destination_dir"
fi

while IFS= read -r filename; do
    file_path=$(find /opt/4rji/bin/ -name "$filename" 2>/dev/null)
    if [ -n "$file_path" ]; then
        cp "$file_path" "$destination_dir"
    else
        
        echo -e "\033[0;31mNo se encontro el archivo $filename en /opt/4rji/bin\033[0m"
    fi
done < "$file_list"

echo ""
echo ""
echo -e "\033[0;34mArchivos copiados a $destination_dir\033[0m"
#echo "linenum.sh   linpeas.sh   winpeasx64.exe   winpeasx86.exe"
echo ""
ls $destination_dir
echo ""


# Iniciar el servidor HTTP de Python en /tmp/apache
if [[ $port =~ ^[0-9]+$ ]]; then
    cd "$destination_dir"
    echo -e "\033[1;34m_________________________________________________________\033[0m"
    echo ""

    echo -e "\033[33mIniciando servidor HTTP de Python en la ruta $destination_dir:$port\033[0m"

#    ip -4 addr show | awk '/inet/ && !/127.0.0.1/ {split($2, a, "/"); printf "\t\t\t\t%s: %s\n", $NF, a[1]}'
    ip -4 addr show | awk '/inet/ && !/127.0.0.1/ {split($2, a, "/"); printf "\033[1;31m\t\t\t\t%s: %s\n\033[0m", $NF, a[1]}'

    echo ""
    python3 -m http.server $port
else
    echo -e "${RED}El puerto ingresado no es valido.${NC}"
fi
