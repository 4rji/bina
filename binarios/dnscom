#!/bin/bash
# Info script — prints DNS troubleshooting commands with brief explanations (does NOT execute)

# Message helper
echo_msg() {
    echo "=============================================="
    echo "$1"
    echo "=============================================="
}

echo ""
echo "_________________________________________________________"
echo ""

echo_msg "$(echo -e "\033[1;36m  DNS Troubleshooting — Reference Commands (no execution)  \033[0m")"

echo ""
echo "_________________________________________________________"
echo ""

# 1) Capture live DNS traffic
echo -e "\033[1;33m  What it does:\033[0m  \033[2mShows any DNS packets on any interface in real time.\033[0m"
echo -e "  \033[1;32mCommand:\033[0m  sudo tcpdump -ni any port 53"

echo ""
echo "_________________________________________________________"
echo ""

# 2) Force a query via systemd-resolved stub with cache-buster
echo -e "\033[1;35m  What it does:\033[0m  \033[2mAsks 127.0.0.53 (systemd-resolved) using a random subdomain to avoid cache.\033[0m"
echo -e "  \033[1;32mCommand:\033[0m  dig @127.0.0.53 test\$RANDOM.openai.com"

echo ""
echo "_________________________________________________________"
echo ""

# 3) View resolver statistics (hits/misses)
echo -e "\033[1;34m  What it does:\033[0m  \033[2mDisplays recent stats from systemd-resolved: cache hits, misses, timeouts, etc.\033[0m"
echo -e "  \033[1;32mCommand:\033[0m  resolvectl statistics | sed -n '1,25p'"

echo ""
echo "_________________________________________________________"
echo ""

# 4) Reset resolver statistics (optional)
echo -e "\033[1;31m  What it does:\033[0m  \033[2mResets counters to zero so you can measure fresh activity.\033[0m"
echo -e "  \033[1;32mCommand:\033[0m  resolvectl reset-statistics"

echo ""
echo "_________________________________________________________"
echo ""

# 5) Flush caches to force fresh lookups
echo -e "\033[1;36m  What it does:\033[0m  \033[2mClears systemd-resolved caches; next queries must go upstream.\033[0m"
echo -e "  \033[1;32mCommand:\033[0m  resolvectl flush-caches"

echo ""
echo "_________________________________________________________"
echo ""

echo_msg "$(echo -e "\033[1;36m  End of reference  \033[0m")"