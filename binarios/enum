#!/bin/bash

# Función para imprimir en color
print_color() {
    color_code=$1
    shift
    echo -e "\e[1;${color_code}m$@\e[0m"
}

# Función para realizar el ping a una IP
ping_ip() {
    local ip=$1
    echo ""
    print_color 36 "Realizando ping a la IP: $ip"
    echo ""
    ping -c 1 "$ip"
}

# Función para determinar el sistema operativo
determine_os() {
    local ip=$1
    timeout 1s whichsys "$ip" > OS-tipo
    echo -e "\n\033[1;37m_________________________________________________________\033[0m\n"

    print_color 31 "$(cat OS-tipo)"
    echo -e "\n\033[1;37m_________________________________________________________\033[0m\n"

    echo "guardado en OS-tipo"
}


# Función para ejecutar nmap
run_nmap1() {
    echo ""
    local choice
    read -rp "$(print_color 33 "¿Desea ejecutar nmap $ip ? (S/n): ")" choice
    choice=${choice:-s}  # Si la opción es vacía (al presionar Enter), se establece como "s" por defecto
    if [[ $choice == [sS] ]]; then
        echo ""
        print_color 32 "Ejecutando nmap $IP"
        nmap "$ip" > nmap
        echo ""
        print_color 32 "Resultado de nmap guardado en el archivo 'nmap'."
        echo ""
        cat nmap
    else
        echo ""
        print_color 31 "No se ejecutó nmap."
    fi
}


# Función para ejecutar nmap
run_nmap() {
    echo ""
    local choice
    read -rp "$(print_color 33 "¿Desea ejecutar nmap? (S/n): ")" choice
    choice=${choice:-s}  # Si la opción es vacía (al presionar Enter), se establece como "s" por defecto
    if [[ $choice == [sS] ]]; then
        echo ""
        print_color 32 "Ejecutando nmap -sC -sV IP"
        sudo nmap -sC -sV "$ip" > nmap_CV
        echo ""
        print_color 32 "Resultado de nmap guardado en el archivo 'nmap_CV'."
        echo ""
        cat nmap1_CV
    else
        echo ""
        print_color 31 "No se ejecutó nmap."
    fi
}

# Main
ip="$ip"  # Tomar la dirección IP de la variable del sistema
ping_ip "$ip"
determine_os "$ip"
run_nmap1
run_nmap

