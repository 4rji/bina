#!/usr/bin/env bash

echo
echo -e "\e[94m_________________________________________________________\e[0m"
echo

# Muestra uso y sale
mostrar_uso() {
    echo "Uso: $0 [-v] [-c] [-b] archivo"
    echo "  -v: Mostrar resultados en terminal sin comentarios ni líneas vacías"
    echo "  -c: Generar clean.conf con líneas sin comentarios ni vacías"
    echo "  -b: Entrar en modo interactivo de modificación de archivo"
    exit 1
}

# Expande ~ a $HOME
expand_path() {
    local path="$1"
    [[ "$path" == "~"* ]] && echo "${path/#~/$HOME}" || echo "$path"
}

# Modo interactivo (-b)
modify_file() {
    local file_path="$1"
    local search_term new_content continue_modifying="s"
    while [[ "$continue_modifying" == "s" ]]; do
        echo
        echo -e "\e[94mArchivo: $file_path\e[0m"
        read -p "Buscar (insensible a may/min): " search_term
        mapfile -t lines < <(grep -ni "^$search_term" "$file_path")
        [[ ${#lines[@]} -eq 0 ]] && echo "No se encontró '$search_term'" && continue
        echo; echo -e "\e[94mLíneas encontradas:\e[0m"
        for i in "${!lines[@]}"; do echo -e "\e[93m$((i+1))) ${lines[i]}\e[0m"; done
        read -p "Selecciona número: " sel
        (( sel<1 || sel> ${#lines[@]} )) && echo "Selección inválida" && continue
        line_num=${lines[$((sel-1))]%%:*}
        echo -e "\e[91mLinea $line_num será comentada y reemplazada:\e[0m"
        sed -n "${line_num}p" "$file_path"
        read -p "Nuevo contenido: " new_content
        sed -i "${line_num}s/^/# /; ${line_num}a $new_content" "$file_path"
        read -n1 -p "¿Otra? (s/n): " continue_modifying; echo
    done
    echo -e "\e[94mModificaciones completadas.\e[0m"
}

# Elimina comentarios y líneas vacías
trim_and_strip() {
    local f="$1"
    sed -E 's/^[[:space:]]*//; s/[[:space:]]*$//' "$f" | grep -vE '^[[:space:]]*#|^[[:space:]]*$'
}

# Procesa flags
verbose=false; clean=false; modify=false
while getopts "vcb" opt; do
    case "$opt" in
        v) verbose=true ;;  
        c) clean=true ;;  
        b) modify=true ;;  
        *) mostrar_uso ;;  
    esac
done
shift $((OPTIND-1))

# Valida archivo
[[ $# -ne 1 ]] && mostrar_uso
archivo="$(expand_path "$1")"
[[ ! -f "$archivo" ]] && echo "El archivo '$archivo' no existe." && exit 1

# Ejecuta opciones
if [[ "$modify" == true ]]; then
    modify_file "$archivo"
    exit 0
fi

if [[ "$clean" == true ]]; then
    trim_and_strip "$archivo" > clean.conf
    echo "Archivo 'clean.conf' creado con líneas sin comentarios ni vacías."
    exit 0
fi

if [[ "$verbose" == true ]]; then
    trim_and_strip "$archivo"
    exit 0
fi

# Por defecto copia al portapapeles
trim_and_strip "$archivo" | xclip -selection clipboard
echo "Las líneas sin comentarios ni vacías de '$archivo' se copiaron al portapapeles."
