#!/bin/bash

# Colors
RED='\033[0;31m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# Function to display available interfaces and IPs
function show_interfaces() {
    ip -4 addr show | awk '/inet/ && !/127.0.0.1/ {split($2, a, "/"); printf "%s:%s\n", $NF, a[1]}'
}

# Get the list of interfaces and IPs
interfaces_and_ips=($(show_interfaces))

# Display the list of interfaces
echo -e "Available interfaces and IPs:"
for i in "${!interfaces_and_ips[@]}"; do
    interface=$(echo "${interfaces_and_ips[$i]}" | cut -d: -f1)
    ip=$(echo "${interfaces_and_ips[$i]}" | cut -d: -f2)
    echo -e "$((i+1)) - ${RED}$interface${NC}, ${BLUE}$ip${NC}"
done

# Ask the user to select an interface
read -p "Which interface number do you want to scan? " selected_interface_number

# Extract the selected IP
selected_ip=$(echo "${interfaces_and_ips[$((selected_interface_number-1))]}" | cut -d: -f2)
subnet=$(echo $selected_ip | awk -F. '{print $1"."$2"."$3}')

echo "_________________________________________________________"
echo ""

tempfile=$(mktemp) # Create a temporary file

# Pings each IP in the subnet and displays the output
for ip in $(seq 1 254); do
    ping -c 1 "$subnet.$ip" | grep "64 bytes" | cut -d " " -f 4 | tr -d ":" | tee -a $tempfile >/dev/null &
done

echo "Scanning ..."
#wait # Wait for all background processes to finish

echo ""
echo "Done."
echo ""

# Display a list of found IPs and check for matching hosts in ~/.ssh/config
echo "List of IP addresses and corresponding host names if available:"
echo ""
counter=1
while read -r ip; do
    # Extract the hostname matching the IP from ~/.ssh/config
    host_name=$(grep -B 1 "$ip" ~/.ssh/config | grep "Host " | awk '{print $2}')
    if [[ -n "$host_name" ]]; then
        echo "$counter- $ip - $host_name"
    else
        echo "$counter- $ip - Host name not found"
    fi
    ((counter++))
done < $tempfile

echo ""
echo "_________________________________________________________"
echo ""

# Ask for the number to scan
read -p "Which number from the list to scan: " selected_number
echo ""
selected_ip=$(sed "${selected_number}q;d" $tempfile | awk '{print $1}')
read -n1 -p "Execute nmap expo to $selected_ip? [y/n]: " execute_expo

if [[ $execute_expo =~ ^[Yy]$ ]]; then
    expo $selected_ip
else
    echo "Expo command was not executed."
fi

# Remove the temporary file
rm $tempfile

echo ""
echo "*** Caution: This script is made for /24 ***"
echo ""
