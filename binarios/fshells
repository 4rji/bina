#!/usr/bin/env bash

# Definir un único archivo de log global
LOGFILE="$HOME/fshells_$(date +'%Y%m%d%H%M%S').log"

# Función para ejecutar comandos y guardar su salida (se añade al log global)
log_exec() {
    local cmd="$*"
    echo -e "\n## Ejecutando: $cmd\n" | tee -a "$LOGFILE"
    eval "$cmd" 2>&1 | tee -a "$LOGFILE"
}

echo ""
echo $'\e[1;34m_________________________________________________________\e[0m' | tee -a "$LOGFILE"
echo "" | tee -a "$LOGFILE"

# Crear archivo temporal
tmp_file=$(mktemp)
# Capturar la lista de procesos en el archivo temporal
log_exec "ps -eo pid,ppid,tty,stat,time,cmd --forest > \"$tmp_file\""
echo ""
echo $'\e[1;34m_________________________________________________________\e[0m' | tee -a "$LOGFILE"
echo ""

# Mostrar el contenido del archivo temporal con batcat
log_exec "cat \"$tmp_file\""
echo ""
rm "$tmp_file"

# Mostrar el comando ps -fae --forest (solo se muestra)
echo $'\e[1;33mps -fae --forest\e[0m' | tee -a "$LOGFILE"
echo ""

# Pedir al usuario el número de proceso a inspeccionar
read -p $'\e[1;36mEnter the process number you want to inspect: \e[0m' pid
echo ""
echo $'\e[1;34m_________________________________________________________\e[0m' | tee -a "$LOGFILE"
echo ""

# Verificar si el PID es válido
if ! [[ "$pid" =~ ^[0-9]+$ ]]; then
    echo $'\e[1;31mError: Please enter a valid process number.\e[0m' | tee -a "$LOGFILE"
    exit 1
fi

# Comprobar si existe el directorio /proc/<pid>
if [ ! -d "/proc/$pid" ]; then
    echo $'\e[1;31mError: Process with PID '"$pid"$' does not exist.\e[0m' | tee -a "$LOGFILE"
    exit 1
fi

# Registrar identificación del proceso (PID) seleccionado en el log
echo "Proceso seleccionado: $pid" | tee -a "$LOGFILE"

# Mostrar el cwd usando sudo
echo $'\e[1;36mWith sudo:\e[0m' | tee -a "$LOGFILE"
echo $'\e[1;33msudo ls -la /proc/'"$pid"'/ | grep cwd\e[0m' | tee -a "$LOGFILE"
log_exec "sudo ls -la /proc/$pid | grep cwd"
echo ""
echo $'\e[1;34m_________________________________________________________\e[0m' | tee -a "$LOGFILE"
echo ""
read -rp $'\e[1;36m...\e[0m'

echo ""
# Mostrar la línea de comandos utilizada para iniciar el proceso
echo $'\e[1;32mDisplaying the command line:\e[0m' | tee -a "$LOGFILE"
echo ""
echo -e "\e[1;33mcat /proc/${pid}/cmdline | tr '\\0' ' '\e[0m" | tee -a "$LOGFILE"
log_exec "sudo cat /proc/$pid/cmdline | tr '\0' ' '"
echo ""
echo $'\e[1;34m_________________________________________________________\e[0m' | tee -a "$LOGFILE"
echo ""
read -rp $'\e[1;36m...\e[0m'
echo ""

# Mostrar el archivo ejecutable asociado al proceso
echo $'\e[1;32mDisplaying the associated executable file:\e[0m' | tee -a "$LOGFILE"
echo ""
echo $'\e[1;33msudo ls -l /proc/'"$pid"'/exe\e[0m' | tee -a "$LOGFILE"
log_exec "sudo ls -l /proc/$pid/exe"
echo ""
echo $'\e[1;34m_________________________________________________________\e[0m' | tee -a "$LOGFILE"
echo ""
read -rp $'\e[1;36m...\e[0m'
echo ""

# Mostrar los descriptores de archivo abiertos por el proceso
echo $'\e[1;32mDisplaying open file descriptors:\e[0m' | tee -a "$LOGFILE"
echo ""
echo $'\e[1;33msudo ls -l /proc/'"$pid"'/fd\e[0m' | tee -a "$LOGFILE"
log_exec "sudo ls -l /proc/$pid/fd"
echo ""
echo $'\e[1;34m_________________________________________________________\e[0m' | tee -a "$LOGFILE"
echo ""
read -rp $'\e[1;36m...\e[0m'
echo ""

# Mostrar las variables de entorno del proceso
echo $'\e[1;32mDisplaying environment variables:\e[0m' | tee -a "$LOGFILE"
echo ""
echo $'\e[1;33mcat /proc/'"$pid"'/environ | tr '\''\0'\'' '\''\n'\''\e[0m' | tee -a "$LOGFILE"
log_exec "cat /proc/$pid/environ | tr '\0' '\n'"
echo ""
echo $'\e[1;34m_________________________________________________________\e[0m' | tee -a "$LOGFILE"
echo ""
read -rp $'\e[1;36m...\e[0m'

# Mostrar el estado del proceso
echo $'\e[1;32mDisplaying status:\e[0m' | tee -a "$LOGFILE"
echo ""
echo $'\e[1;33mcat /proc/'"$pid"'/status\e[0m' | tee -a "$LOGFILE"
log_exec "cat /proc/$pid/status"
echo ""
echo $'\e[1;34m_________________________________________________________\e[0m' | tee -a "$LOGFILE"
echo ""
read -rp $'\e[1;36m...\e[0m'

# Mostrar las conexiones de red del proceso
echo $'\e[1;32mDisplaying network connections:\e[0m' | tee -a "$LOGFILE"
echo ""
echo $'\e[1;33mss -anp | grep '"$pid"$'\e[0m' | tee -a "$LOGFILE"
log_exec "ss -anp | grep $pid"
echo ""
echo $'\e[1;34m_________________________________________________________\e[0m' | tee -a "$LOGFILE"
echo ""

# Verificar si se encontraron conexiones de red
if ! ss -anp | grep -q "$pid"; then
    echo $'\e[1;31mNo network connections found for PID '"$pid"$'.\e[0m' | tee -a "$LOGFILE"
    echo ""
    echo $'\e[1;34m_________________________________________________________\e[0m' | tee -a "$LOGFILE"
    echo ""
fi

echo "END" | tee -a "$LOGFILE"
echo ""

# Preguntar si se desea matar el proceso
read -p $'\e[1;31mDo you want to kill the process? [y/n]: \e[0m' response
if [[ "$response" == "y" || "$response" == "Y" ]]; then
    log_exec "sudo kill -9 $pid"
    echo $'\e[1;32mProcess with PID '"$pid"$' has been terminated.\e[0m' | tee -a "$LOGFILE"
else
    echo $'\e[1;33mProcess with PID '"$pid"$' was not terminated.\e[0m' | tee -a "$LOGFILE"
fi