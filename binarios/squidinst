#!/usr/bin/env bash

echo ""
echo -e "\033[1;34m_________________________________________________________\033[0m"
echo ""
# Función para mostrar el mensaje de ayuda y preguntar si desea continuar
show_help_and_confirm() {
    echo ""
    echo -e "\033[1;32mEl comando que este script ejecuta es:\033[0m"
    echo ""
    echo -e "\033[1;33mdocker run -d --name squid-container -e TZ=UTC -p 3128:3128 ubuntu/squid\033[0m"
    echo ""
    echo ""
echo -e "\033[1;34m_________________________________________________________\033[0m"
    echo ""

    # Preguntar al usuario si desea continuar
    read -n1 -p "Continuar el script?  Cancel [c]  " response
    echo ""  # Añadir una nueva línea para la salida

    # Convertir la respuesta a minúsculas y evaluar
    case "$response" in
    *) echo "Continuando..." ;;
    esac
}

# Verificar si se pasó el argumento -h
if [ "$1" == "-h" ]; then
    show_help_and_confirm
fi

# Preguntar al usuario dónde instalar squid
echo ""
echo -e "\033[33m¿Dónde desea instalar squid?\033[0m"
echo -e "\033[33m1\033[0m - Docker"
echo -e "\033[33m2\033[0m - APT"
echo -e "\033[33m3\033[0m - Stop,rm y restart squid container"
echo ""
read -p "(1, 2 o 3): " choice

if [ $choice -eq 1 ]; then


    # Lista de paquetes a instalar
    paquetes=("docker.io" )

    # Función para verificar si un paquete está instalado (Debian/Ubuntu/Kali)
    paquete_instalado_apt() {
        dpkg -l "$1" | grep -q '^ii'  
    }

    # Función para verificar si un paquete está instalado (CentOS/RHEL)
    paquete_instalado_yum() {
        yum list installed "$1" &> /dev/null
    }

    # Función para verificar si un paquete está instalado (Fedora)
    paquete_instalado_dnf() {
        dnf list installed "$1" &> /dev/null
    }

    # Función para verificar si un paquete está instalado (Arch Linux)
    paquete_instalado_pacman() {
        pacman -Qi "$1" &> /dev/null
    }

    # Detectar el sistema operativo
    if [ -f /etc/os-release ]; then
        . /etc/os-release
        OS=$ID
    fi

    # Instalar paquetes basados en el sistema operativo
    for paquete in "${paquetes[@]}"; do
        case $OS in
            "debian"|"ubuntu"|"kali")
                if ! paquete_instalado_apt "$paquete"; then
                    echo "Instalando el paquete $paquete..."
                    sudo apt-get install -y "$paquete"
                fi
                ;;
            "centos"|"rhel")
                if ! paquete_instalado_yum "$paquete"; then
                    echo "Instalando el paquete $paquete..."
                    sudo yum install -y "$paquete"
                fi
                ;;
            "fedora")
                if ! paquete_instalado_dnf "$paquete"; then
                    echo "Instalando el paquete $paquete..."
                    sudo dnf install -y "$paquete"
                fi
                ;;
            "arch")
                if ! paquete_instalado_pacman "$paquete"; then
                    echo "Instalando el paquete $paquete..."
                    sudo pacman -S --noconfirm "$paquete"
                fi
                ;;
            *)
                ;;
        esac
    done

    # Instalar en Docker
    echo ""
    echo "Descargando la imagen de squid en Docker..."
    docker pull ubuntu/squid
    echo ""
    echo "Iniciando contenedor squid en Docker..."
    docker run -d --name squid-container -e TZ=UTC -p 3128:3128 ubuntu/squid

    # Espacios para una mejor visualización
    echo ""
    echo "_________________________________________________________"
    echo ""
    echo "Mostrando los puertos utilizados por squid:"
    sudo lsof -i -P -n | grep "3128"
    echo ""
    echo "_________________________________________________________"
    echo ""

elif [ $choice -eq 2 ]; then
    # Instalar mediante APT


    # Lista de paquetes a instalar
    paquetes=("squid")

    # Función para verificar si un paquete está instalado (Debian/Ubuntu/Kali)
    paquete_instalado_apt() {
        dpkg -l "$1" | grep -q '^ii'  
    }

    # Función para verificar si un paquete está instalado (CentOS/RHEL)
    paquete_instalado_yum() {
        yum list installed "$1" &> /dev/null
    }

    # Función para verificar si un paquete está instalado (Fedora)
    paquete_instalado_dnf() {
        dnf list installed "$1" &> /dev/null
    }

    # Función para verificar si un paquete está instalado (Arch Linux)
    paquete_instalado_pacman() {
        pacman -Qi "$1" &> /dev/null
    }

    # Detectar el sistema operativo
    if [ -f /etc/os-release ]; then
        . /etc/os-release
        OS=$ID
    fi

    # Instalar paquetes basados en el sistema operativo
    for paquete in "${paquetes[@]}"; do
        case $OS in
            "debian"|"ubuntu"|"kali")
                if ! paquete_instalado_apt "$paquete"; then
                    echo "Instalando el paquete $paquete..."
                    sudo apt-get install -y "$paquete"
                fi
                ;;
            "centos"|"rhel")
                if ! paquete_instalado_yum "$paquete"; then
                    echo "Instalando el paquete $paquete..."
                    sudo yum install -y "$paquete"
                fi
                ;;
            "fedora")
                if ! paquete_instalado_dnf "$paquete"; then
                    echo "Instalando el paquete $paquete..."
                    sudo dnf install -y "$paquete"
                fi
                ;;
            "arch")
                if ! paquete_instalado_pacman "$paquete"; then
                    echo "Instalando el paquete $paquete..."
                    sudo pacman -S --noconfirm "$paquete"
                fi
                ;;
            *)
                ;;
        esac
    done




    # Copiar archivo de configuración original
    sudo cp /etc/squid/squid.conf /etc/squid/squid.conf.bk

    # Descargar y reemplazar archivo de configuración
    sudo wget -O /etc/squid/squid.conf https://raw.githubusercontent.com/4rji/4rji/main/config/squid.conf

    # Reiniciar el servicio squid
    sudo systemctl restart squid
    sudo systemctl enable squid

    # Espacios para una mejor visualización
    echo ""
    echo "_________________________________________________________"
    echo ""
    echo "El servicio squid ha sido reiniciado!"
    echo "Puedes modificar la configuración en /etc/squid/squid.conf"
    echo ""
    echo "_________________________________________________________"
    echo ""
    echo "Mostrando los puertos utilizados por squid:"
    sudo lsof -i -P -n | grep "3128"
    echo ""
    echo "_________________________________________________________"
    echo ""

elif [ $choice -eq 3 ]; then
    # Detener, eliminar y reiniciar contenedor existente
    echo ""
    echo "Deteniendo el contenedor existente..."
    docker stop squid-container
    echo ""
    echo "Eliminando el contenedor existente..."
    docker rm squid-container
    echo ""
    echo "Descargando la imagen de squid en Docker..."
    docker pull ubuntu/squid
    echo ""
    echo "Iniciando contenedor squid en Docker..."
    docker run -d --name squid-container -e TZ=UTC -p 3128:3128 ubuntu/squid

    # Espacios para una mejor visualización
    echo ""
    echo "_________________________________________________________"
    echo ""
    echo "Mostrando los puertos utilizados por squid:"
    echo "sudo lsof -i -P -n | grep 3128"   
    echo ""
    sudo lsof -i -P -n | grep "3128"
    echo ""
    echo "_________________________________________________________"
    echo ""

else
    echo "Opción no válida. Por favor, seleccione 1, 2 o 3."
fi


echo ""
echo "docker run -d --name squid-container -e TZ=UTC -p 3128:3128 ubuntu/squid"
echo ""
