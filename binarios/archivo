#!/bin/bash



if [ "$1" == "-i" ]; then
        # Lista de paquetes a instalar
    paquetes=("docker-compose" "docker.io" )

    # Función para verificar si un paquete está instalado (Debian/Ubuntu/Kali)
    paquete_instalado_apt() {
        dpkg -l "$1" | grep -q '^ii'  
    }

    # Función para verificar si un paquete está instalado (CentOS/RHEL)
    paquete_instalado_yum() {
        yum list installed "$1" &> /dev/null
    }

    # Función para verificar si un paquete está instalado (Fedora)
    paquete_instalado_dnf() {
        dnf list installed "$1" &> /dev/null
    }

    # Función para verificar si un paquete está instalado (Arch Linux)
    paquete_instalado_pacman() {
        pacman -Qi "$1" &> /dev/null
    }

    # Detectar el sistema operativo
    if [ -f /etc/os-release ]; then
        . /etc/os-release
        OS=$ID
    fi

    # Instalar paquetes basados en el sistema operativo
    for paquete in "${paquetes[@]}"; do
        case $OS in
            "debian"|"ubuntu"|"kali")
                if ! paquete_instalado_apt "$paquete"; then
                    echo "Instalando el paquete $paquete..."
                    sudo apt-get install -y "$paquete"
                fi
                ;;
            "centos"|"rhel")
                if ! paquete_instalado_yum "$paquete"; then
                    echo "Instalando el paquete $paquete..."
                    sudo yum install -y "$paquete"
                fi
                ;;
            "fedora")
                if ! paquete_instalado_dnf "$paquete"; then
                    echo "Instalando el paquete $paquete..."
                    sudo dnf install -y "$paquete"
                fi
                ;;
            "arch")
                if ! paquete_instalado_pacman "$paquete"; then
                    echo "Instalando el paquete $paquete..."
                    sudo pacman -S --noconfirm "$paquete"
                fi
                ;;
            *)
                ;;
        esac
    done

    # Crear directorio y navegar a él
    echo ""
    echo -e "\e[94m_________________________________________________________\e[0m"
    echo ""

    mkdir -p ~/archivebox/data && cd ~/archivebox

    # Descargar el archivo docker-compose.yml
    curl -fsSL 'https://docker-compose.archivebox.io' > docker-compose.yml

    # Inicializar el entorno de ArchiveBox
    sudo docker-compose run archivebox init --setup

    # Iniciar ArchiveBox
    sudo docker-compose up
    
elif [ "$1" == "" ]; then
    echo -e "\n\033[1;35m_________________________________________________________\033[0m\n"
    Instrucciones:
    echo ""
    echo "alias archivserv='cd ~/archivebox && docker-compose up'" >> ~/.zshrc
    echo "alias archiva='sudo docker-compose run archivebox add --depth=0 '" >> ~/.zshrc

    echo -e "\e[33mpara iniciar el servidor ir a cd ~/archivebox\e[0m"
    echo -e "\e[33mejecutar: docker-compose up (a veces con sudo, depende permisos)\e[0m"
    echo -e "\e[33mUsa el alias: archivserv también para iniciarlo\e[0m"
    echo ""
    echo -e "\e[33mtambién el alias archiva para guardar un link rápidamente depth=0\e[0m"
    echo -e "\e[33marchiva http...link\e[0m"

    echo -e "\n\033[1;35m_________________________________________________________\033[0m\n"
    echo ""
    
    echo -e "\e[32mPregunta: ¿Qué página quieres guardar?\e[0m"
    read -p "URL (agrega o pega link con https://): " link

    echo ""
    echo -e "\e[32m¿Qué profundidad deseas?\e[0m"
    echo -e "\e[32mdepth = 0 (archive just these URLs)\e[0m"
    echo -e "\e[32mdepth = 1 (archive these URLs and all URLs one hop away)\e[0m"
    read -p "Profundidad (0 o 1): " depth

    if [ "$depth" == "0" ]; then
        echo ""
        echo -e "\e[94m_________________________________________________________\e[0m"
        echo ""

        cd ~/archivebox
        sudo docker-compose run archivebox add --depth=0 $link
        cd -
    elif [ "$depth" == "1" ]; then
        echo ""
        echo -e "\e[94m_________________________________________________________\e[0m"
        echo ""

        cd ~/archivebox
        sudo docker-compose run archivebox add --depth=1 $link
        cd -
    else
        echo "Profundidad no válida. Debes ingresar 0 o 1."
    fi
else
    echo "Uso: ./script [-i] instalar"
fi



#https://github.com/ArchiveBox/ArchiveBox