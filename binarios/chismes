#!/usr/bin/env bash

# Verificar si el script se ejecuta con la opción -r
if [[ "$1" == "-r" && -n "$2" ]]; then
    file_to_process="$2"

    if [[ ! -e "$file_to_process" ]]; then
        echo -e "\033[0;31mEl archivo especificado no existe: $file_to_process\033[0m"
        exit 1
    fi

    echo "Desea ver solo las IPs y puertos atacados? [Y/n]"
    read -r user_input
    user_input=${user_input:-Y}
    user_input=$(echo "$user_input" | tr '[:lower:]' '[:upper:]')

    if [[ "$user_input" == [Yy] ]]; then
        if [ -e "ips-ports" ]; then
            echo "El archivo 'ips-ports' ya existe."
            read -p "¿Deseas sobrescribirlo? [S/n]: " overwrite_ips
            overwrite_ips=${overwrite_ips:-S}
            if [[ "$overwrite_ips" != [Ss] ]]; then
                timestamp=$(date +%Y%m%d%H%M%S)
                new_ips_file="ips-ports_$timestamp"
                echo "Se creará un nuevo archivo: $new_ips_file"
            else
                new_ips_file="ips-ports"
            fi
        else
            new_ips_file="ips-ports"
        fi

        echo "Procesando la captura y generando el archivo '$new_ips_file'..."
        tshark -r "$file_to_process" -T fields -e ip.dst | sort | uniq -c | sort -nr | head -n 1 \
        | awk '{print $2}' \
        | while read -r ip; do
              tshark -r "$file_to_process" -T fields -e ip.src -e ip.dst -e tcp.dstport \
              | awk -v dst_ip="$ip" '$2 == dst_ip' | sort -u
          done > "$new_ips_file"

        echo "El resultado ha sido guardado en '$new_ips_file':"
        echo -e "\n\033[1;32m_________________________________________________________\033[0m\n"
        cat "$new_ips_file" | col
        echo -e "\n\033[1;37m_________________________________________________________\033[0m\n"
        batcat -l rb "$new_ips_file" | col
    fi

    echo -e "\033[0;33m[t] para tshark, [p] Python Resumen, [v] Ver captura /Enter para cancelar:\033[0m"
    read -r choice
    case "$choice" in
      t|T)
        tshark -r "$file_to_process"
        ;;
      p|P)
        monitcp "$file_to_process"
        ;;
      v|V)
        echo -e "\033[0;32mMostrando contenido del archivo $file_to_process:\033[0m"
        tshark -r "$file_to_process" | less
        ;;
      *)
        echo -e "\033[0;31mOperación cancelada.\033[0m"
        ;;
    esac
    exit 0
fi

# Modo de captura en tiempo real

echo ""
echo -e "\033[1;32mInterfaces disponibles:\033[0m"
echo ""
interfaces=(any $(ip -o link show | awk -F': ' '{print $2}'))
i=1
for interface in "${interfaces[@]}"; do
    ip_address=$(ip -f inet addr show "$interface" 2>/dev/null | grep -Po 'inet \K[\d.]+' | head -1)
    [[ -z "$ip_address" ]] && ip_address="No IP"
    if [ "$ip_address" = "No IP" ]; then
        echo -e "$i) \033[1;35m$interface\033[0m (\033[0;31m$ip_address\033[0m)"
    else
        echo -e "$i) \033[1;35m$interface\033[0m (\033[0;33m$ip_address\033[0m)"
    fi
    ((i++))
done

echo ""
echo -e "\033[1;33mPor favor, selecciona el número de la interfaz de red que deseas capturar:\033[0m"
read -r choice
selected_interface=${interfaces[$choice-1]}

if [ -z "$selected_interface" ]; then
    echo -e "\033[0;31mSelección no válida. Saliendo.\033[0m"
    exit 1
fi

echo ""
echo -e "\033[1;33m¿Deseas escuchar un puerto específico? [y/N]:\033[0m"
read -r listen_choice
listen_choice=${listen_choice:-n}
listen_choice=$(echo "$listen_choice" | tr '[:upper:]' '[:lower:]')

if [[ "$listen_choice" == "y" ]]; then
    echo ""
    echo -e "\033[1;36mPor favor, ingresa el puerto que deseas escuchar:\033[0m"
    read -r port
    if [[ -z "$port" || ! "$port" =~ ^[0-9]+$ ]]; then
        echo -e "\033[0;31mPuerto inválido. Saliendo.\033[0m"
        exit 1
    fi
    capture_filter="port $port"
else
    capture_filter=""
fi

if [ -e "captura.cap" ]; then
    echo -e "\033[0;31mEl archivo captura.cap ya existe.\033[0m"
    read -p "¿Quieres sobrescribirlo? [S/n]: " overwrite
    overwrite=${overwrite:-S}
    if [[ "$overwrite" != [Ss] ]]; then
        timestamp=$(date +%Y%m%d%H%M%S)
        new_filename="captura_$timestamp.cap"
        echo -e "\033[0;32mSe creará un nuevo archivo: $new_filename.\033[0m"
    else
        new_filename="captura.cap"
    fi
else
    new_filename="captura.cap"
fi

echo -e "\033[0;32msudo tcpdump -i $selected_interface $capture_filter -w $new_filename -v\033[0m"
echo "Para verlo sin guardar nada: sudo tcpdump -i any (port 9998) port optional"
echo ""
echo -e "\n\033[1;33m_________________________________________________________\033[0m\n"

# Ejecutar tcpdump en un subshell reseteando la captura de SIGINT para que Ctrl-C solo termine tcpdump
(
  trap - SIGINT
  sudo tcpdump -i "$selected_interface" $capture_filter -w "$new_filename" -v
)
echo -e "\033[0;32mCaptura completada y guardada en $new_filename.\033[0m"

echo -e "\n\033[0;33m[t] para tshark, [p] Python Resumen /Enter para cancelar:\033[0m"
read -r choice
case "$choice" in
  t|T)
    tshark -r "$new_filename"
    ;;
  p|P)
    monitcp "$new_filename"
    ;;
  *)
    echo -e "\033[0;31mOperación cancelada.\033[0m"
    ;;
esac

echo ""
echo -e "\n\033[1;32m_________________________________________________________\033[0m\n"
echo -e "\033[0;34mUsa 'tshark -r $new_filename' para verlo de nuevo\033[0m"
echo -e "\033[1;33mO con python:\033[0m"
echo -e "\033[0;34mmonitcp\033[0m"
echo -e "\n\033[1;32m_________________________________________________________\033[0m\n"

echo "Desea ver solo las IPs y puertos atacados? [Y/n]"
read -r user_input
user_input=${user_input:-Y}
user_input=$(echo "$user_input" | tr '[:lower:]' '[:upper:]')

if [[ "$user_input" == [Yy] ]]; then
    if [ -e "ips-ports" ]; then
        echo "El archivo 'ips-ports' ya existe."
        read -p "¿Deseas sobrescribirlo? [S/n]: " overwrite_ips
        overwrite_ips=${overwrite_ips:-S}
        if [[ "$overwrite_ips" != [Ss] ]]; then
            timestamp=$(date +%Y%m%d%H%M%S)
            new_ips_file="ips-ports_$timestamp"
            echo "Se creará un nuevo archivo: $new_ips_file"
        else
            new_ips_file="ips-ports"
        fi
    else
        new_ips_file="ips-ports"
    fi

    echo "Procesando la captura y generando el archivo '$new_ips_file'..."
    tshark -r "$new_filename" -T fields -e ip.dst | sort | uniq -c | sort -nr | head -n 1 \
    | awk '{print $2}' \
    | while read -r ip; do
          tshark -r "$new_filename" -T fields -e ip.src -e ip.dst -e tcp.dstport \
          | awk -v dst_ip="$ip" '$2 == dst_ip' | sort -u
      done > "$new_ips_file"

    echo "El resultado ha sido guardado en '$new_ips_file':"
    echo -e "\n\033[1;32m_________________________________________________________\033[0m\n"
    cat "$new_ips_file" | col
    echo -e "\n\033[1;37m_________________________________________________________\033[0m\n"
    batcat -l rb "$new_ips_file" | col
else
    echo "Operación cancelada. No se ha generado ningún archivo."
fi