#!/usr/bin/env bash

echo -e "\033[0;34m"
echo "_________________________________________________________"
echo -e "\033[0m"
echo ""

# Mostrar la lista de interfaces disponibles y permitir al usuario seleccionar una
echo -e "\033[0;32mInterfaces disponibles:\033[0m"
echo ""
interfaces=( $(ip -o link show | awk -F': ' '{print $2}') )
i=1
for interface in "${interfaces[@]}"
do
    ip_address=$(ip -f inet addr show "$interface" | grep -Po 'inet \K[\d.]+' | head -1)
    [[ -z "$ip_address" ]] && ip_address="No IP"
    if [ "$ip_address" = "No IP" ]; then
        echo -e "$i) \033[1;35m$interface\033[0m (\033[0;31m$ip_address\033[0m)"
    else
        echo -e "$i) \033[1;35m$interface\033[0m (\033[0;33m$ip_address\033[0m)"
    fi
    ((i++))
done

echo ""
echo -e "\033[0;33mPor favor, selecciona el número de la interfaz de red que deseas capturar:\033[0m"
read -r choice
selected_interface=${interfaces[$choice-1]}

if [ -z "$selected_interface" ]; then
    echo -e "\033[0;31mSelección no válida. Saliendo.\033[0m"
    exit 1
fi

# Verificar si el archivo captura.cap ya existe
if [ -e "captura.cap" ]; then
    echo -e "\033[0;31mEl archivo captura.cap ya existe.\033[0m"
    read -p "¿Quieres sobrescribirlo? [S/n]: " overwrite
    overwrite=${overwrite:-S}
    if [[ "$overwrite" != [Ss] ]]; then
        timestamp=$(date +%Y%m%d%H%M%S)
        new_filename="captura_$timestamp.cap"
        echo -e "\033[0;32mSe creará un nuevo archivo: $new_filename.\033[0m"
    else
        new_filename="captura.cap"
    fi
else
    new_filename="captura.cap"
fi

echo -e "\033[0;32mEjecutando: sudo tcpdump -i $selected_interface -w $new_filename -v\033[0m"
sudo tcpdump -i "$selected_interface" -w "$new_filename" -v

echo -e "\033[0;32mCaptura completada y guardada en $new_filename.\033[0m"
echo ""

echo -e "\033[0;33m[t] para tshark, [p] Python Resumen /Enter para cancelar:\033[0m"
read -r choice
case "$choice" in
  t|T)
    tshark -r "$new_filename"
    ;;
  p|P)
    monitcp
    ;;
  *)
    echo -e "\033[0;31mOperación cancelada.\033[0m"
    ;;
esac

echo ""
echo -e "\n\033[1;32m_________________________________________________________\033[0m\n"
echo -e "\033[0;34mUsa 'tshark -r captura.cap' para verlo de nuevo\033[0m"
echo -e "\033[1;33mO con python:\033[0m"
echo -e "\033[0;34mmonitcp\033[0m"
echo -e "\n\033[1;32m_________________________________________________________\033[0m\n"

echo "Desea ver solo las IPs y puertos atacados? [y/n]"
read -r user_input

if [[ "$user_input" == [Yy] ]]; then
    # Verificar si el archivo ips-ports ya existe
    if [ -e "ips-ports" ]; then
        echo "El archivo 'ips-ports' ya existe."
        read -p "¿Deseas sobrescribirlo? [S/n]: " overwrite_ips
        overwrite_ips=${overwrite_ips:-S}
        if [[ "$overwrite_ips" != [Ss] ]]; then
            timestamp=$(date +%Y%m%d%H%M%S)
            new_ips_file="ips-ports_$timestamp"
            echo "Se creará un nuevo archivo: $new_ips_file"
        else
            new_ips_file="ips-ports"
        fi
    else
        new_ips_file="ips-ports"
    fi

    echo "Procesando la captura y generando el archivo '$new_ips_file'..."
    tshark -r "$new_filename" -T fields -e ip.dst | sort | uniq -c | sort -nr | head -n 1 \
    | awk '{print $2}' \
    | while read -r ip; do
          tshark -r "$new_filename" -T fields -e ip.src -e ip.dst -e tcp.dstport \
          | awk -v dst_ip="$ip" '$2 == dst_ip' | sort -u
      done > "$new_ips_file"

    echo "El resultado ha sido guardado en '$new_ips_file':"
    cat "$new_ips_file"
else
    echo "Operación cancelada. No se ha generado ningún archivo."
fi