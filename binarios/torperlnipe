#!/usr/bin/env bash

# Colores
azul='\e[0;34m'
reset='\e[0m'
verde='\e[0;32m'


# Verificar si la opción -o está presente
while getopts "o" opt; do
    case $opt in
        o)
            omitir=true
            ;;
    esac
done

if [[ $omitir != true ]]; then

    #omitir -o

    # Función para verificar si un paquete está instalado

    paquetes=("perl" "cpanminus"  )

    # Función para verificar si un paquete está instalado (Debian/Ubuntu/Kali)
    paquete_instalado_apt() {  
        dpkg -l "$1" | grep -q '^ii'  >/dev/null
    }

    # Función para verificar si un paquete está instalado (CentOS/RHEL)
    paquete_instalado_yum() {
        yum list installed "$1"  >/dev/null
    }

    # Función para verificar si un paquete está instalado (Fedora)
    paquete_instalado_dnf() {
        dnf list installed "$1" >/dev/null
    }

    # Función para verificar si un paquete está instalado (Arch Linux)
    paquete_instalado_pacman() {
        pacman -Qi "$1" >/dev/null
    }

    # Detectar el sistema operativo
    if [ -f /etc/os-release ]; then
        . /etc/os-release
        OS=$ID
    fi

    # Instalar paquetes basados en el sistema operativo
    for paquete in "${paquetes[@]}"; do
        case $OS in
            "debian"|"ubuntu"|"kali")
                if ! paquete_instalado_apt "$paquete"; then
                    echo "Instalando el paquete $paquete..."
                    sudo apt-get install -y "$paquete" >/dev/null
                fi
                ;;
            "centos"|"rhel")
                if ! paquete_instalado_yum "$paquete"; then
                    echo "Instalando el paquete $paquete..."
                    sudo yum install -y "$paquete" >/dev/null
                fi
                ;;
            "fedora")
                if ! paquete_instalado_dnf "$paquete"; then
                    echo "Instalando el paquete $paquete..."
                    sudo dnf install -y "$paquete" >/dev/null
                fi
                ;;
            "arch")
                if ! paquete_instalado_pacman "$paquete"; then
                    echo "Instalando el paquete $paquete..."
                    sudo pacman -S --noconfirm "$paquete" >/dev/null
                fi
                ;;
            *)
                ;;
        esac
    done

    function mktem() {
        new_dir=$(mktemp -d)
        echo "Directorio creado en: $new_dir"
        cd "$new_dir" || return
        echo "Cambiado al directorio: $PWD"
    }

    # Aquí puedes llamar a la función mktem
    mktem
    


    git clone https://github.com/htrgouvea/nipe && cd nipe
    sudo cpanm JSON


    cpanm --installdeps .
    

    sudo cpanm Config::Simple


    sudo perl nipe.pl install
fi

# Colores
rojo='\e[0;31m'
amarillo='\e[0;33m'
verde='\e[0;32m'
reset='\e[0m'

echo -e "${amarillo}¿Quieres iniciar?${reset} [S/n]"

read -n1 -r -s iniciar

echo ""
echo "_________________________________________________________"
echo "$new_dir"
echo ""

if [[ "$iniciar" =~ ^[Ss]$ ]]; then
    echo -e "${verde}Iniciando...${reset}"
    sudo perl nipe.pl start
    echo ""
    sudo perl nipe.pl status
else
    echo -e "${rojo}No se inició.${reset}"
fi

