#!/usr/bin/env bash
set -euo pipefail

# ---- configuración de color ----
RED='\033[31m'
GREEN='\033[32m'
BLUE='\033[34m'
YELLOW='\033[33m'
RESET='\033[0m'

# ---- flags ----
AUTO_INSTALL=0
FORCE_INSTALL=0
INSTALL_ONLY=0

for arg in "$@"; do
  case "$arg" in
    --auto-install) AUTO_INSTALL=1 ;;
    --force) FORCE_INSTALL=1 ;;
    --install-only) INSTALL_ONLY=1 ;;
    --help|-h)
      cat <<EOF
Usage: $(basename "$0") [--auto-install] [--force] [--install-only]
  --auto-install   : try to install impacket automatically if missing (no prompt)
  --force          : force reinstall / pipx --force (if using pipx/pip)
  --install-only   : only run the installer phase, then exit
EOF
      exit 0
      ;;
    *)
      # ignore unknown args
      ;;
  esac
done

WORKDIR="$(pwd)"
SMB_SHARE_NAME="smbFolder"
SMB_PORT=445

# get a single primary IP (first address)
IP="$(hostname -I 2>/dev/null | awk '{print $1}' || hostname -i 2>/dev/null || echo "127.0.0.1")"

# ---- mensajes iniciales (IMPORTANTE) ----

# Instructions with ANSI color codes
echo -e "\033[31m"
echo ""
echo "_________________________________________________________"
echo ""
echo "Instructions for downloading the file:"
echo ""
echo -e "\033[32m"
echo "From Linux:"
echo -e "\033[34m"
echo "1. Install smbclient if you don't have it already:"
echo -e "\033[33m"
echo "   sudo apt-get install smbclient"

echo -e "\033[34m"
echo "2. Access the shared folder:"
echo -e "\033[33m"
echo "   smbclient //${IP}/${SMB_SHARE_NAME}"
echo " (not password just press enter)"
echo -e "\033[34m"
echo "3. Download the file:"
echo -e "\033[33m"
echo "   get <filename>"
echo ""
echo -e "\033[31m"
echo "From Windows:"
echo -e "\033[32m"
echo "1. Press Win + R to open the Run dialog."
echo -e "\033[34m"
echo "2. Type '\\\\${IP}\\${SMB_SHARE_NAME}' and press Enter."
echo -e "\033[33m"
echo "3. Copy the file from the shared folder or try copy \\\\${IP}\\${SMB_SHARE_NAME}\\<filename>"
echo ""
echo "_________________________________________________________"
echo ""
echo -e "\033[31m"

# ---- utilidades ----
is_root() {
  [ "$(id -u)" -eq 0 ]
}

sudo_maybe() {
  # usage: sudo_maybe <cmd...>
  if is_root; then
    "$@"
  else
    # preserve PATH for venv executables
    sudo env "PATH=$PATH" "$@"
  fi
}

check_impacket() {
  if command -v impacket-smbserver >/dev/null 2>&1; then
    echo "impacket-smbserver (bin) encontrado: $(command -v impacket-smbserver)"
    return 0
  fi
  if command -v smbserver.py >/dev/null 2>&1; then
    echo "smbserver.py en PATH: $(command -v smbserver.py)"
    return 0
  fi
  if [ -x "${HOME}/.local/share/pipx/venvs/impacket/bin/smbserver.py" ] || [ -x "${HOME}/.local/share/pipx/venvs/impacket/bin/impacket-smbserver" ]; then
    export PATH="${HOME}/.local/share/pipx/venvs/impacket/bin:${PATH}"
    echo "impacket encontrado en pipx venv"
    return 0
  fi
  if [ -x "/usr/share/doc/python3-impacket/examples/smbserver.py" ]; then
    echo "ejemplo smbserver.py provisto por paquete python3-impacket"
    return 0
  fi
  return 1
}

install_impacket() {
  echo "Seleccionando método de instalación..."
  if command -v pipx >/dev/null 2>&1 || python3 -m pip show pipx >/dev/null 2>&1; then
    echo "Usando pipx..."
    python3 -m pip install --user pipx >/dev/null 2>&1 || true
    python3 -m pipx ensurepath >/dev/null 2>&1 || true
    if [ "$FORCE_INSTALL" -eq 1 ]; then
      pipx install --force impacket || pipx upgrade --force impacket || true
    else
      pipx install impacket || pipx upgrade impacket || true
    fi
    return
  fi

  if command -v pip3 >/dev/null 2>&1; then
    echo "Usando pip3..."
    if [ "$FORCE_INSTALL" -eq 1 ]; then
      sudo python3 -m pip install --upgrade --force-reinstall impacket || true
    else
      sudo python3 -m pip install --upgrade impacket || true
    fi
    return
  fi

  if command -v apt-get >/dev/null 2>&1; then
    echo "Usando apt-get (paquete python3-impacket si está disponible)..."
    sudo apt-get update -y || true
    sudo apt-get install -y python3-impacket || true
    return
  fi

  echo "Intentando clonar repo impacket (último recurso)..."
  TMPDIR="$(mktemp -d /tmp/impacket.XXXX)"
  git clone https://github.com/SecureAuthCorp/impacket.git "$TMPDIR" || { echo "clone falló"; return 1; }
  echo "Repositorio clonado en: $TMPDIR"
  echo "Para iniciar ahora: sudo python3 \"$TMPDIR/examples/smbserver.py\" ${SMB_SHARE_NAME} \"${WORKDIR}\" -smb2support &"
}

start_smbserver() {
  # prefer impacket-smbserver executable
  if command -v impacket-smbserver >/dev/null 2>&1; then
    echo "Iniciando impacket-smbserver (bin)..."
    sudo_maybe impacket-smbserver "${SMB_SHARE_NAME}" "${WORKDIR}" -smb2support &
    sleep 0.2
    return 0
  fi

  SMB_PY_PATH="$(command -v smbserver.py 2>/dev/null || true)"
  if [ -n "$SMB_PY_PATH" ]; then
    echo "smbserver.py en PATH: $SMB_PY_PATH"
    case "$SMB_PY_PATH" in
      "$HOME/.local/share/pipx/venvs/impacket/"*)
        VENV_BIN_DIR="$HOME/.local/share/pipx/venvs/impacket/bin"
        PY_BIN="$VENV_BIN_DIR/python3"
        if [ -x "$PY_BIN" ]; then
          echo "Ejecutando con python del venv pipx: $PY_BIN (con sudo si es necesario)"
          if is_root; then
            "$PY_BIN" "$SMB_PY_PATH" "${SMB_SHARE_NAME}" "${WORKDIR}" -smb2support &
          else
            sudo env "PATH=$PATH" "$PY_BIN" "$SMB_PY_PATH" "${SMB_SHARE_NAME}" "${WORKDIR}" -smb2support &
          fi
          sleep 0.2
          return 0
        fi
        ;;
    esac

    echo "Ejecutando smbserver.py con 'python3' (fallback, con sudo si es necesario)..."
    if is_root; then
      python3 "$SMB_PY_PATH" "${SMB_SHARE_NAME}" "${WORKDIR}" -smb2support &
    else
      sudo env "PATH=$PATH" python3 "$SMB_PY_PATH" "${SMB_SHARE_NAME}" "${WORKDIR}" -smb2support &
    fi
    sleep 0.2
    return 0
  fi

  if [ -x "${HOME}/.local/share/pipx/venvs/impacket/bin/smbserver.py" ]; then
    VENV_PY="${HOME}/.local/share/pipx/venvs/impacket/bin/python3"
    if [ -x "$VENV_PY" ]; then
      echo "Iniciando smbserver.py desde pipx venv con su python (con sudo si es necesario): $VENV_PY"
      if is_root; then
        "$VENV_PY" "${HOME}/.local/share/pipx/venvs/impacket/bin/smbserver.py" "${SMB_SHARE_NAME}" "${WORKDIR}" -smb2support &
      else
        sudo env "PATH=$PATH" "$VENV_PY" "${HOME}/.local/share/pipx/venvs/impacket/bin/smbserver.py" "${SMB_SHARE_NAME}" "${WORKDIR}" -smb2support &
      fi
      sleep 0.2
      return 0
    else
      echo "smbserver.py encontrado en pipx venv pero no se encontró python en: ${HOME}/.local/share/pipx/venvs/impacket/bin"
    fi
  fi

  if [ -f "/usr/share/doc/python3-impacket/examples/smbserver.py" ]; then
    echo "Iniciando smbserver.py desde /usr/share/doc (usando sudo si es necesario)..."
    if is_root; then
      python3 "/usr/share/doc/python3-impacket/examples/smbserver.py" "${SMB_SHARE_NAME}" "${WORKDIR}" -smb2support &
    else
      sudo env "PATH=$PATH" python3 "/usr/share/doc/python3-impacket/examples/smbserver.py" "${SMB_SHARE_NAME}" "${WORKDIR}" -smb2support &
    fi
    sleep 0.2
    return 0
  fi

  return 1
}

# ---- flujo principal ----
if check_impacket; then
  echo -e "${GREEN}impacket detectado.${RESET}"
else
  echo -e "${YELLOW}impacket no está instalado o no se detectó un smbserver utilizable.${RESET}"
  if [ "$AUTO_INSTALL" -eq 1 ]; then
    echo "Modo --auto-install activo: intentando instalar ahora..."
    install_impacket
  else
    printf "¿Deseas intentar instalar impacket ahora? [Y/n]: "
    read -r REPLY || REPLY="Y"
    REPLY=${REPLY:-Y}
    case "$REPLY" in
      [Yy]* )
        install_impacket
        ;;
      * )
        echo "Instalación omitida por el usuario."
        ;;
    esac
  fi
fi

if [ "$INSTALL_ONLY" -eq 1 ]; then
  echo "Modo --install-only: saliendo."
  exit 0
fi

if check_impacket; then
  if start_smbserver; then
    echo -e "${GREEN}SMB server iniciado correctamente.${RESET}"
    echo -e "${BLUE}Compartido:${RESET} ${WORKDIR} -> \\\\${IP}\\${SMB_SHARE_NAME}"
    echo -e "${BLUE}Para detenerlo (busca proceso python o impacket-smbserver):${RESET}"
    echo "  ps aux | grep -E 'smbserver.py|impacket-smbserver' | grep -v grep"
    echo "  kill <PID>"
    exit 0
  else
    echo -e "${RED}No se pudo iniciar el SMB server: binario o script no accesible.${RESET}"
    echo "Si clonaste el repo (opción clone), lanza manualmente con:"
    echo "  sudo python3 /ruta/al/repo/impacket/examples/smbserver.py ${SMB_SHARE_NAME} \"${WORKDIR}\" -smb2support &"
    exit 1
  fi
else
  echo -e "${RED}Aún no se detecta impacket. No se iniciará el SMB server.${RESET}"
  exit 1
fi
