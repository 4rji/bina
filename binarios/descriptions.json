{




    "ipsclean": {
        "name": "ipsclean",
        "short_desc": "Script to extract and clean IP addresses from any file.",
        "detailed_desc": "This script extracts all IPv4 addresses from a given file, using strings to ensure data is readable even from binaries. It allows the user to sort and deduplicate the results, saving them into ips.txt. It displays the commands executed and counts the number of extracted IPs.\n\nUsage:\n  ./ipsclean archivo\n\nMain commands executed:\n  - strings to extract printable characters.\n  - grep -Eo to match IP address patterns.\n  - sort -u (optional) to remove duplicates.\n  - wc -l to count the number of extracted IPs.\n\nThe script colors outputs for better visibility (success, warnings, errors)."
    },


    "ipt": {
        "name": "ipt",
        "short_desc": "ipt para activar o desactivar iptables y mostrar las reglas actuales.",
        "detailed_desc": "Este script lista las reglas de iptables, luego pregunta al usuario si desea activar (ACCEPT todo y limpiar reglas) o desactivar (DROP todo) el firewall. Finalmente vuelve a mostrar las reglas actuales. Comandos principales: `sudo iptables -L`, `sudo iptables -P INPUT DROP`, `sudo iptables -P FORWARD DROP`, `sudo iptables -P OUTPUT DROP`, `sudo iptables -P INPUT ACCEPT`, `sudo iptables -P FORWARD ACCEPT`, `sudo iptables -P OUTPUT ACCEPT`, `sudo iptables -F`."
    },



    
    "backd": {
        "name": "backd",
        "short_desc": "Monitorea conexiones de red establecidas y muestra datos del proceso en tiempo real.",
        "detailed_desc": "Este binario ejecuta un bucle infinito que, cada 5 s, lista las conexiones TCP/UDP en estado ESTABLISHED excepto las locales y las asociadas a procesos excluidos (firefox, chrome, google-chrome). Para cada conexión imprime PID, nombre de proceso, usuario, línea de comando, direcciones local/remota y hostname inverso.\n\nEl programa se auto-eleva: si no se ejecuta como root, relanza a sí mismo con sudo preservando variables de entorno. También admite capabilities (cap_net_raw, cap_net_admin) para funcionar sin sudo.\n\nUso: backd\n\nSin argumentos, comienza a monitorizar hasta que el usuario lo interrumpe con Ctrl-C."
    },
    "comentadas": {
        "name": "comentadas",
        "short_desc": "Procesa archivos de configuración eliminando comentarios y líneas vacías.",
        "detailed_desc": "Este script permite procesar archivos de configuración para extraer solo las líneas útiles, eliminando comentarios y líneas vacías.\n\nUso: comentadas [-v] [-c] [-b] archivo\n\nOpciones:\n1. -v: Muestra resultados en terminal sin comentarios ni líneas vacías\n2. -c: Genera un archivo clean.conf con líneas sin comentarios ni vacías\n3. -b: Entra en modo interactivo para modificar el archivo, permitiendo buscar líneas, comentarlas y reemplazarlas\n\nSin opciones, copia al portapapeles el contenido del archivo sin comentarios ni líneas vacías.\n\nÚtil para limpiar y editar archivos de configuración de forma rápida y eficiente."
    },
    
    "ayudabinario": {
        "name": "ayudabinario",
        "short_desc": "Agrega mensajes de ayuda personalizados a scripts bash/zsh.",
        "detailed_desc": "Este script modifica archivos bash/zsh para agregar un mensaje de ayuda personalizado que se muestra al usar el argumento -h.\n\nUso: ./ayudabinario <archivo_a_modificar>\n\nEl proceso:\n1. Solicita al usuario un mensaje de ayuda personalizado\n2. Modifica el archivo especificado para:\n   - Asegurar que el shebang sea #!/bin/bash\n   - Agregar una función show_help_and_confirm() que muestra el mensaje\n   - Formatea el mensaje con colores en la terminal\n3. El mensaje de ayuda se mostrará cuando se ejecute el script con -h\n\nÚtil para estandarizar y mejorar la documentación de scripts bash/zsh."
    },
    
    "decoyfile": {
        "name": "decoyfile",
        "short_desc": "Recopila metadatos de archivos para crear señuelos de tiempos de acceso.",
        "detailed_desc": "Este script solicita al usuario la ruta de un archivo, obtiene sus marcas de tiempo (creación, modificación y acceso) en formato legible y las agrega a un archivo de registro.\n\nUso: agregararchivo\n\nEl proceso:\n1. Solicita al usuario la ruta del archivo a analizar\n2. Extrae las marcas de tiempo (creación, modificación y acceso) del archivo\n3. Formatea las fechas de manera legible\n4. Guarda esta información en /opt/decoys/decoys.txt\n5. Crea automáticamente el directorio de destino si no existe\n\nÚtil para análisis forense y creación de señuelos con marcas de tiempo específicas. Usar decoyfilecheck para ver si se modificó el archivo, útil para detectar si alguien cambió archivos importantes como hosts o dns."
    },
    
    "adio": {
        "name": "adio",
        "short_desc": "Elimina archivos de forma segura usando técnicas de borrado militar (DoD) y sobreescritura.",
        "detailed_desc": "Este script borra archivos de manera segura utilizando una combinación de las herramientas 'scrub' y 'shred' para garantizar que los datos no puedan ser recuperados.\n\nUso: adio <archivo>\n\nEl proceso:\n1. Primero aplica 'scrub' con el patrón DoD (Department of Defense)\n2. Luego utiliza 'shred' para sobreescribir el archivo 10 veces con datos aleatorios\n3. Finalmente elimina el archivo del sistema\n\nIMPORTANTE: Una vez ejecutado, el archivo no podrá ser recuperado."
    },
    
    "adios": {
        "name": "adios",
        "short_desc": "Elimina directorios completos de forma segura aplicando técnicas de borrado militar recursivamente.",
        "detailed_desc": "Este script borra directorios completos de manera segura, aplicando técnicas de borrado militar a todos los archivos dentro del directorio y sus subdirectorios.\n\nUso: adios <directorio>\n\nEl proceso:\n1. Recorre recursivamente el directorio y todos sus subdirectorios\n2. Aplica 'scrub' con el patrón DoD a cada archivo encontrado\n3. Luego utiliza 'shred' para sobreescribir cada archivo 10 veces con datos aleatorios\n4. Finalmente elimina el directorio completo y su contenido\n\nIMPORTANTE: Una vez ejecutado, los archivos y el directorio no podrán ser recuperados."
    },
    
    "proxyverifica": {
        "name": "proxyverifica",
        "short_desc": "Verifies the functionality of proxies using a CSV file.",
        "detailed_desc": "This script verifies if proxies are functional. It requires a CSV file containing the list of proxies.\n\nUsage instructions:\n\n1. Prepare the proxy list in the following CSV format:\n   - Example: 66.60.150.190,80,US,United States,anonymous\n\n2. To format the list, use the following command:\n   - `awk '{print $1 \":\" $2}' lista > proxylist.csv`\n   - This command combines the IP and port to generate the required file.\n\n3. Run the script to verify the proxies."
    },
    
    "proxyloco": {
        "name": "proxyloco",
        "short_desc": "Downloads, configures, and launches ligolo-ng Agent or Proxy with guided setup.",
        "detailed_desc": "This script automates the process of downloading ligolo-ng binaries (Agent/Proxy), extracting them, and assisting with configuration and execution based on user input.\n\nUsage instructions:\n\n1. Run without arguments to interactively choose binaries and setup Agent or Proxy.\n2. Use `./proxyloco -2` to access additional proxy tunnel setup commands, crontab examples, and agent launch instructions.\n3. Supports both AMD64 and ARM64 architectures with visual guidance and command tips.\n\nProxy quick commands:\n\n1.- Return to the proxy session: session\n2.- Start the proxy: start\n\nTo delete the subnet:\nsudo ip link delete ligolo\nsudo ip route add 1.1.1.0/24 dev ligolo\n\n# Second tunnel:\nsudo ip tuntap add user $USER mode tun ligolo2\nsudo ip link set ligolo2 up\nsudo ip route add X.X.X.0/24 dev ligolo2\nstart --tun ligolo2"
    },
    
    "grepfind": {
        "name": "grepfind",
        "short_desc": "Busca una palabra en todos los archivos de un directorio y subdirectorios usando find y grep.",
        "detailed_desc": "find <directorio> -type f -exec grep -H --color=always \"<palabra>\" {} \\;"
    },
    
    "redr": {
        "name": "redr",
        "short_desc": "Reinicia los servicios de red según la distribución Linux.",
        "detailed_desc": "sudo dhclient eth1\nsudo systemctl restart network-manager\nsudo service networking restart\nsudo systemctl restart network\nsudo systemctl restart NetworkManager"
    },
    
    "lineas": {
        "name": "lineas",
        "short_desc": "Muestra líneas de diferentes colores en la terminal.",
        "detailed_desc": "echo -e \"\\033[1;31m_________________________________________________________\\033[0m\"\necho -e \"\\033[1;32m_________________________________________________________\\033[0m\"\necho -e \"\\033[1;33m_________________________________________________________\\033[0m\"\necho -e \"\\033[1;34m_________________________________________________________\\033[0m\"\necho -e \"\\033[1;35m_________________________________________________________\\033[0m\"\necho -e \"\\033[1;36m_________________________________________________________\\033[0m\"\necho -e \"\\033[1;37m_________________________________________________________\\033[0m\""
    },
    
    "impactoinst": {
        "name": "impactoinst",
        "short_desc": "Instala Impacket y configura SMBServer.",
        "detailed_desc": "cp /opt/4rji/bin/impacto.zip .\nunzip impacto.zip\ncd impacket\npip3 install .\nimpacket-smbserver Nombre_share $(pwd) -smb2support"
    },
    
    "limpiartest": {
        "name": "limpiartest",
        "short_desc": "Genera archivos aleatorios para pruebas.",
        "detailed_desc": "dd if=/dev/urandom of=file_$i bs=1M count=$size"
    },
    
    "crontt": {
        "name": "crontt",
        "short_desc": "Muestra los crontabs del usuario actual y root.",
        "detailed_desc": "crontab -l\nsudo crontab -l"
    },
    
    "rootcheck": {
        "name": "rootcheck",
        "short_desc": "Muestra los archivos de configuración del usuario root.",
        "detailed_desc": "sudo cat /root/.bashrc\nsudo cat /root/.shrc\nsudo cat /root/.cshrc\nsudo cat /root/.tcshrc"
    },
    
    "inundacion": {
        "name": "inundacion",
        "short_desc": "Realiza ataques de inundación SYN.",
        "detailed_desc": "sudo hping3 <ip_objetivo> --flood -S -p 445\nsudo hping3 --flood -S <ip_objetivo> -a <ip_suplantar> -s 445 -p 445"
    },
    
    "searchinst": {
        "name": "searchinst",
        "short_desc": "Instala y configura SearXNG en Docker.",
        "detailed_desc": "docker pull searxng/searxng\ndocker run --rm -d -p 9999:8080 -v \"${PWD}/searxng:/etc/searxng\" -e \"BASE_URL=http://localhost:9999/\" -e \"INSTANCE_NAME=my-instance\" searxng/searxng"
    },
    
    "updatecentos7": {
        "name": "updatecentos7",
        "short_desc": "Actualiza el repositorio base de CentOS 7.",
        "detailed_desc": "sudo curl -o /etc/yum.repos.d/CentOS-Base.repo https://el7.repo.almalinux.org/centos/CentOS-Base.repo"
    },
    
    "dcc_spanish": {
        "name": "dcc_spanish",
        "short_desc": "Configura y ejecuta contenedores Docker con IPs aleatorias.",
        "detailed_desc": "docker run -it --network <red> --ip <ip_aleatoria> <imagen>"
    },
    
    "honeyport.sh": {
        "name": "honeyport.sh",
        "short_desc": "Implementa un honeyport que bloquea IPs que intentan conectarse.",
        "detailed_desc": "sudo nc -l -p 8080 -v\nsudo iptables -A INPUT -s <ip> -j DROP"
    },
    
    "chtm": {
        "name": "chtm",
        "short_desc": "Protege archivos contra modificaciones en macOS.",
        "detailed_desc": "sudo chflags uchg <archivo>"
    },
    
    "f2binst": {
        "name": "f2binst",
        "short_desc": "Instala y configura fail2ban y dependencias.",
        "detailed_desc": "sudo apt-get install -y iptables\nsudo apt-get install -y rsyslog\nsudo apt-get install -y fail2ban"
    },
    
    "artilleria": {
        "name": "artilleria",
        "short_desc": "Instala iptables en diferentes distribuciones Linux.",
        "detailed_desc": "sudo apt-get install -y iptables\nsudo yum install -y iptables\nsudo dnf install -y iptables\nsudo pacman -S iptables"
    },
    
    "ansiconf": {
        "name": "ansiconf",
        "short_desc": "Configura el archivo de hosts de Ansible.",
        "detailed_desc": "echo \"[hosts]\n<alias> ansible_host=<host> ansible_port=<port> ansible_user=<username> ansible_ssh_private_key_file=<key_path>\" >> ~/.ssh/ansible_hosts"
    },
    
    "amigo2inst": {
        "name": "amigo2inst",
        "short_desc": "Instala y ejecuta Ollama con modelos de IA.",
        "detailed_desc": "curl -fsSL https://ollama.com/install.sh | sh\nollama run deepseek-coder-v2"
    },
    "amigoinst": {
        "name": "amigoinst",
        "short_desc": "Instala dependencias necesarias para el chatbot Amigo según el sistema operativo.",
        "detailed_desc": "Este script detecta el sistema operativo y utiliza el gestor de paquetes correspondiente para instalar dependencias como 'python3-pip' y 'python3-virtualenv'.\n\nUso: Ejecutar el script directamente en la terminal.\n\nEl proceso:\n1. Detecta el sistema operativo (Debian, Ubuntu, CentOS, Fedora, Arch, etc.).\n2. Verifica si los paquetes necesarios ya están instalados.\n3. Si no están instalados, los instala automáticamente usando el gestor de paquetes adecuado.\n4. Proporciona instrucciones para configurar un entorno virtual y continuar con la instalación del chatbot Amigo.\n\nIdeal para preparar el entorno de desarrollo del chatbot Amigo de manera rápida y sencilla."
    },
    "knock-http": {
        "name": "knock-http",
        "short_desc": "Configura knockd para abrir/cerrar puerto HTTP.",
        "detailed_desc": "echo \"[openHTTP]\n    sequence    = 8000,8800,8888\n    seq_timeout = 5\n    command     = /opt/4rji/bin/open_http.sh\n    tcpflags    = syn\n\n[closeHTTP]\n    sequence    = 8888,8800,8000\n    seq_timeout = 5\n    command     = /opt/4rji/bin/close_http.sh\n    tcpflags    = syn\" | sudo tee -a /etc/knockd.conf"
    },
    
    "splunkforw": {
        "name": "splunkforw",
        "short_desc": "Instala Splunk Universal Forwarder en diferentes sistemas operativos.",
        "detailed_desc": "curl -O https://download.splunk.com/products/universalforwarder/releases/9.4.0/linux/splunkforwarder-9.4.0-<arch>.deb\nsudo dpkg -i splunkforwarder-9.4.0-<arch>.deb"
    },
    
    "csftp": {
        "name": "csftp",
        "short_desc": "Establece una conexión SFTP para transferir archivos.",
        "detailed_desc": "sftp <usuario>@<ip>:<archivo> ~"
    },
    
    "protoninicio": {
        "name": "protoninicio",
        "short_desc": "Configura y ejecuta OpenVPN como servicio systemd.",
        "detailed_desc": "sudo systemctl daemon-reload\nsudo systemctl enable openvpn.service\nsudo systemctl start openvpn.service"
    },
    
    "lazyvpn": {
        "name": "lazyvpn",
        "short_desc": "Descarga e instala un script de configuración de OpenVPN.",
        "detailed_desc": "wget https://git.io/vpn -O openvpn-install.sh && bash openvpn-install.sh"
    },
    
    "lazydinst": {
        "name": "lazydinst",
        "short_desc": "Instala lazydocker y sus dependencias.",
        "detailed_desc": "sudo apt-get update && sudo apt-get install -y golang-go\ngit clone https://github.com/jesseduffield/lazydocker.git\ncd lazydocker\ngo install"
    },
    
    "todo.bash": {
        "name": "todo.bash",
        "short_desc": "Busca tareas en un archivo de texto.",
        "detailed_desc": "cat ~/.todo.txt | grep <palabra>"
    },
    
    "proceso": {
        "name": "proceso",
        "short_desc": "Muestra información detallada de los procesos del sistema.",
        "detailed_desc": "ps -eo user,comm,pid"
    },
    
    "dnsleak": {
        "name": "dnsleak",
        "short_desc": "Prueba de fugas de DNS con soporte para interfaces específicas.",
        "detailed_desc": "curl --interface <interface> https://bash.ws/dnsleak\nping -I <interface> bash.ws"
    },
    
    "nviminst": {
        "name": "nviminst",
        "short_desc": "Instala Neovim y sus dependencias desde el código fuente.",
        "detailed_desc": "sudo apt install ninja-build gettext libtool libtool-bin autoconf automake cmake g++ pkg-config unzip curl doxygen -y\ngit clone https://github.com/neovim/neovim\ncd neovim\nmake CMAKE_BUILD_TYPE=Release\nsudo make install\ngit clone https://github.com/NvChad/starter ~/.config/nvim"
    },
    
    "ccssh": {
        "name": "ccssh",
        "short_desc": "Establece conexión SSH con verificación de permisos.",
        "detailed_desc": "ssh -p <puerto> <usuario>@<ip>"
    },
    
    "batfzf": {
        "name": "batfzf",
        "short_desc": "Configura bat, fzf, thefuck y zoxide con temas personalizados.",
        "detailed_desc": "mkdir -p ~/.config/bat/themes\ncurl -O https://raw.githubusercontent.com/folke/tokyonight.nvim/main/extras/sublime/tokyonight_night.tmTheme\nbat cache --build\nsudo apt install fzf thefuck zoxide\necho 'export BAT_THEME=\"tokyonight_night\"' >> ~/.zshrc\necho '[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh' >> ~/.zshrc\necho 'eval $(thefuck --alias fk)' >> ~/.zshrc\necho 'eval \"$(zoxide init zsh)\"' >> ~/.zshrc"
    },
    
    "qemuconsola": {
        "name": "qemuconsola",
        "short_desc": "Habilita y inicia el servicio de consola serial en QEMU.",
        "detailed_desc": "sudo systemctl enable serial-getty@ttyS0.service\nsudo systemctl start serial-getty@ttyS0.service"
    },
    
    "sntp": {
        "name": "sntp",
        "short_desc": "Instala y configura Chrony para sincronización de tiempo.",
        "detailed_desc": "sudo apt-get install chrony -f\nsudo systemctl restart chrony\nsudo systemctl status chrony"
    },
    
    "sweepnet": {
        "name": "sweepnet",
        "short_desc": "Escanea una red completa usando sweep.",
        "detailed_desc": "sweep <ip_base>.{1..255}.{1..255}"
    },
    
    "ssa_arch": {
        "name": "ssa_arch",
        "short_desc": "Muestra información del sistema y controla el servicio SSH.",
        "detailed_desc": "ssa1 > tempfile\nbatcat -l rb tempfile\nsudo systemctl stop sshd\nsudo systemctl start sshd\n/usr/sbin/ifconfig wlp0s20f3 | grep \"inet \" | awk '{print $2}'\nwhoami"
    },
    
    "pas": {
        "name": "pas",
        "short_desc": "Guarda el contenido del portapapeles en un archivo.",
        "detailed_desc": "xclip -selection clipboard -o >> $htf"
    },
    
    "lsofmonitor1": {
        "name": "lsofmonitor1",
        "short_desc": "Monitorea nuevas conexiones de red usando lsof.",
        "detailed_desc": "lsof -i -P -n | awk 'NR==1 || !seen[$0]++' > /tmp/conexiones_actuales\ncomm -13 /tmp/conexiones_previas /tmp/conexiones_actuales"
    },
    
    "pingz": {
        "name": "pingz",
        "short_desc": "Monitorea el estado de hosts definidos en el archivo de configuración SSH.",
        "detailed_desc": "ping -c 1 <host>\nssh -p <puerto> <host>"
    },
    
    "hashf": {
        "name": "hashf",
        "short_desc": "Monitorea y verifica hashes de archivos en un directorio.",
        "detailed_desc": "sudo touch /var/log/<directorio>_reports.txt /var/log/<directorio>_history.txt\nsudo chown root:root /var/log/<directorio>_reports.txt /var/log/<directorio>_history.txt\nsudo chmod 644 /var/log/<directorio>_reports.txt /var/log/<directorio>_history.txt"
    },
    
    "todou": {
        "name": "todou",
        "short_desc": "Actualiza y formatea la lista de alias del sistema.",
        "detailed_desc": "sudo apt-get install -y bsdmainutils\ncp ~/.zshrc /tmp/\ngrep '^alias' /tmp/.zshrc > /tmp/list.txt\nsed -i 's/^[^ ]* //' /tmp/list.txt\nsed -i 's/ *= */=/' /tmp/list.txt\ncolumn -t -s \"=\" /tmp/list.txt > /tmp/lists.txt\nmv /tmp/lists.txt ~/.aliaseses.md"
    },
    
    "herrabinm": {
        "name": "herrabinm",
        "short_desc": "Descarga y actualiza los binarios de bina.",
        "detailed_desc": "mktemp -d \"/tmp/tmp.bina.XXXXXX\"\ngit clone --depth 1 https://github.com/4rji/bina.git\ncd bina\nsudo cp -a binarios/* /opt/4rji/bin"
    },
    
    "firefoxephemeral": {
        "name": "firefoxephemeral",
        "short_desc": "Configura Firefox con perfiles efímeros y soporte multilingüe.",
        "detailed_desc": "mkdir -p /tmp/fx-profile\necho \"user_pref('intl.accept_languages', '<lang_code>,en');\nuser_pref('general.useragent.locale', '<lang_code>');\nuser_pref('intl.locale.requested', '<lang_code>');\" > /tmp/fx-profile/user.js"
    },
    
    "s1pinst": {
        "name": "s1pinst",
        "short_desc": "Instala Docker y verifica la instalación.",
        "detailed_desc": "sudo apt-get install -y docker.io\nsudo yum install -y docker\nsudo dnf install -y docker\nsudo pacman -S docker"
    },
    
    "pings": {
        "name": "pings",
        "short_desc": "Monitorea el estado de hosts definidos en el archivo de configuración SSH.",
        "detailed_desc": "ping -c 1 <host>"
    },
    
    "aaron": {
        "name": "aaron",
        "short_desc": "Script para compilar y ejecutar un exploit de escalada de privilegios basado en Dirty Pipe.",
        "detailed_desc": "Este script automatiza el proceso de preparación, compilación y ejecución de un exploit de escalada de privilegios conocido como Dirty Pipe (CVE-2022-0847).\n\nUso: Ejecutar el script directamente.\n\nEl proceso:\n1. Copia el archivo 'noraa' desde una ubicación específica.\n2. Renombra 'noraa' a 'privesc.c'.\n3. Compila 'privesc.c' usando GCC para generar el binario 'privesc'.\n4. Ejecuta el binario 'privesc'.\n5. Proporciona acceso como usuario root si el exploit tiene éxito.\n\nIMPORTANTE: Este script debe usarse únicamente con fines educativos y en entornos controlados. El uso indebido puede ser ilegal y está estrictamente prohibido."
    },
    
    "archissh": {
        "name": "archissh",
        "short_desc": "Archiva páginas web remotamente usando ArchiveBox a través de SSH.",
        "detailed_desc": "Este script permite archivar páginas web de forma remota usando ArchiveBox a través de una conexión SSH. Requiere configurar la variable de entorno 'archiveserv' con el usuario y host del servidor remoto.\n\nUso:\n1. Configura la variable de entorno archiveserv en ~/.zshrc\n2. Ejecuta el script y proporciona:\n   - URL de la página web a archivar\n   - Profundidad de rastreo (0-3+ niveles)\n   - Contraseña sudo del servidor remoto\n\nEl script:\n- Agrega automáticamente 'https://' si es necesario\n- Ejecuta ArchiveBox en el servidor remoto usando Docker\n- Permite controlar la profundidad del rastreo\n- Muestra el comando ejecutado para transparencia"
    },
    
    "abrireph-ext-file": {
        "name": "abrireph-ext-file",
        "short_desc": "Extrae un archivo específico de un contenedor Docker en ejecución con instrucciones guiadas",
        "detailed_desc": "Este script permite extraer archivos específicos de contenedores Docker en ejecución de manera interactiva.\n\nEl proceso:\n1. Muestra los contenedores Docker en ejecución\n2. Solicita al usuario seleccionar un contenedor por ID o nombre\n3. Pide el nombre del archivo a buscar\n4. Busca el archivo en el contenedor seleccionado\n5. Solicita la ruta completa del archivo a copiar\n6. Pide la ruta de destino en el host (por defecto el directorio actual)\n7. Copia el archivo del contenedor al host\n\nComandos utilizados:\n- docker ps\n- docker exec -it $container find / -type f -iname \"*$filename*\" 2>/dev/null\n- docker cp $container:$filepath $hostpath"
    },
    "ftpbrute": {
        "name": "ftpbrute",
         "short_desc": "Brute-force FTP login using Go FTP client",
         "detailed_desc": "Usage: ./ftpbrutem host:port username wordlist.txt\n\nThis tool iterates through each password in the specified wordlist and attempts to authenticate to the FTP server using the Go `github.com/jlaffaye/ftp` package. It reports progress at regular intervals and stops when valid credentials are found."
    },
    "sshbackdoor": {
        "name": "sshbackdoor",
          "short_desc": "Installs a PAM module for SSH using a hard‑coded password.",
          "detailed_desc": "Builds and installs a custom PAM module (`pam_verify_auth.so`) that accepts a single hard‑coded password for SSH logins.\n\nRequirements:\n- Linux with SSH daemon\n- `sudo`, `gcc` (Debian/Ubuntu: `sudo apt-get install gcc` | RHEL/CentOS: `sudo yum install gcc`)\n- PAM development headers (Debian/Ubuntu: `sudo apt-get install libpam0g-dev` | RHEL/CentOS: `sudo yum install pam-devel`)\n\nUsage:\n  sshbackdoor Secret-Word\n  sudo systemctl restart sshd"
    },
    "dnsblock": {
        "name": "dnsblock",
        "short_desc": "Bloquea dominios en un servidor DNS usando BIND9.",
        "detailed_desc": "Este script automatiza el bloqueo de dominios en un servidor DNS configurado con BIND9.\n\nUso: ./dnsblock <archivo_dominios.txt>\n\nEl proceso:\n1. Verifica y crea los archivos necesarios (archivo de dominios, archivo de zona y configuración de BIND9).\n2. Procesa cada dominio en el archivo proporcionado, añadiéndolo a la configuración si no está bloqueado.\n3. Permite agregar nuevos dominios manualmente.\n4. Recarga la configuración de BIND9 para aplicar los cambios.\n\nÚtil para gestionar listas de bloqueo de dominios de manera eficiente en servidores DNS."
    },
    "cpng": {
        "name": "cpng",
        "short_desc": "Convierte imágenes .webp a .png de forma individual o masiva.",
        "detailed_desc": "Este script convierte imágenes en formato .webp a .png utilizando ImageMagick.\n\nUso:\n1. Para convertir una imagen específica: cpng <archivo.webp>\n2. Para convertir todas las imágenes .webp en el directorio actual: cpng\n\nEl proceso:\n- Si se proporciona un archivo como argumento, verifica su existencia y lo convierte a .png.\n- Si no se proporcionan argumentos, busca todas las imágenes .webp en el directorio actual y las convierte a .png.\n\nRequiere tener instalado ImageMagick."
    },
    "copyrs": {
        "name": "copyrs",
        "short_desc": "Transfers files to remote hosts using rsync over SSH.",
        "detailed_desc": "The script reads the SSH configuration file (~/.ssh/config) to extract host details such as usernames, hostnames, and ports. It allows the user to select a host from the available options and transfers the specified file to the selected host using rsync. Usage: ./copyrs <filename>."
    },

    "ataquehttp": {
        "name": "ataquehttp",
        "short_desc": "Configura y ejecuta GoldenEye para pruebas de estrés HTTP.",
        "detailed_desc": "Este script automatiza la configuración y ejecución de GoldenEye, una herramienta de prueba de estrés HTTP.\n\nEl proceso:\n1. Descomprime el archivo GoldenEye-master.zip desde /opt/4rji/bin\n2. Cambia al directorio descomprimido en /tmp/GoldenEye-master\n3. Asegura que el script Python tenga permisos de ejecución\n4. Proporciona instrucciones para ejecutar el script con la URL objetivo\n\nOpciones más comunes en GoldenEye:\n• -u: especificar archivo de user-agents\n• -w: número de workers (hilos)\n• -s: número de sockets por worker\n• -m: método HTTP (get, post, random)\n• -n: desactiva verificación SSL\n• -d: modo debug (salida más detallada)\n\nEjemplo de uso:\n./goldeneye.py https://objetivo.com -w 50 -s 1000 -m random -n\n\nIMPORTANTE: Este script debe usarse únicamente con fines educativos y en entornos controlados. El uso indebido puede ser ilegal y está estrictamente prohibido."
    },
    "dominf": {
    "name": "dominf",
    "short_desc": "Interactive reconnaissance and enumeration tool for domains.",
    "detailed_desc": "DomInf is an interactive and fast Go-based tool for gathering information about domains. It allows users to perform tasks like bypassing Cloudflare protection, scanning common TCP ports, grabbing service banners, doing reverse PTR lookups, checking real IP via DNS and HTTP headers, testing for DNS zone transfers, brute-forcing subdomains, and resolving DNS records (A and AAAA). The tool provides a menu-driven interface and saves output to a log file for later analysis. Usage: 'go run dominf.go <domain>'."
    },

    "locip": {
    "name": "locip",
    "short_desc": "Geo-localiza IPs usando GeoLite2 mostrando ciudad, región y país.",
    "detailed_desc": "Este script en Go utiliza la base de datos GeoLite2-City para geolocalizar direcciones IP. Permite recibir una IP individual como argumento o un archivo de texto (como 'ips.txt') que contenga múltiples IPs, línea por línea. Si no se especifica argumento, intenta leer automáticamente 'ips.txt'. Muestra la ciudad, región (si está disponible) y país asociados a cada IP. Usa la librería 'geoip2-golang' para acceder a la base de datos MaxMind."
    },

    "nmapfiref": {
        "name": "nmapfiref",
        "short_desc": "Realiza escaneos de puertos con NMAP y guarda los resultados en formato XML.",
        "detailed_desc": "Este script permite realizar dos tipos de escaneos de puertos usando NMAP:\n\n1. Escaneo básico: Utiliza las opciones -v --reason -sS para un escaneo rápido y básico\n2. Escaneo avanzado: Utiliza -A -O -sV para un análisis más detallado incluyendo detección de SO y versiones de servicios\n\nEl script primero procesa un archivo de IPs (ips.txt) para agrupar direcciones IP similares, luego permite elegir el tipo de escaneo a realizar y finalmente ejecuta NMAP guardando los resultados en formato XML con estilos XSL.\n\nLos resultados se guardan en puertos.xml y pueden ser visualizados con un navegador web gracias al stylesheet incluido."
    }
}

