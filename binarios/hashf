#!/usr/bin/env bash

echo -e "\033[1;36mEjemplo de ruta: /var/www/html\033[0m"
echo ""
echo -e "\033[1;34m_________________________________________________________\033[0m"
echo ""
read -p "$(echo -e "\033[1;33m  ¿Cuál es la ruta del directorio que deseas monitorear?  \033[0m ")" USER_PATH


FOLDER_NAME=$(basename "${USER_PATH}")
REPORT_FILE_NAME="${FOLDER_NAME}_reports.txt"
HISTORICAL_FILE_NAME="${FOLDER_NAME}_history.txt"
ALERT_FILE_NAME="${FOLDER_NAME}_alerts.log"
NEW_SCRIPT="/opt/4rji/bin/hashf_${FOLDER_NAME}.sh"

sudo touch "/var/log/${REPORT_FILE_NAME}" "/var/log/${HISTORICAL_FILE_NAME}"
sudo chown root:root "/var/log/${REPORT_FILE_NAME}" "/var/log/${HISTORICAL_FILE_NAME}"
sudo chmod 644 "/var/log/${REPORT_FILE_NAME}" "/var/log/${HISTORICAL_FILE_NAME}"




sudo tee "${NEW_SCRIPT}" >/dev/null <<EOF
#!/usr/bin/env bash

WEB_DIR="${USER_PATH}"
HASH_FILE="/var/log/hash_file_${FOLDER_NAME}.txt"
TEMP_HASH_FILE="/tmp/hash_file_${FOLDER_NAME}_new.txt"





REPORT_FILE="/var/log/${REPORT_FILE_NAME}"
HISTORICAL_FILE="/var/log/${HISTORICAL_FILE_NAME}"
ALERT_FILE="\$HOME/${ALERT_FILE_NAME}"

FLAG_FILE="/tmp/hash_alert_triggered_${FOLDER_NAME}"
SCRIPT_PATH="\$(realpath "\$0")"

# Función para mostrar mensajes
echo_msg() {
  echo -e "\033[1;32m==============================================\033[0m"
  echo -e "\033[1;35m  \$1\033[0m"
  echo -e "\033[1;34m==============================================\033[0m"
  echo ""
}

sudo touch "\$HASH_FILE" "\$REPORT_FILE" "\$HISTORICAL_FILE"
sudo chmod 644 "\$HASH_FILE" "\$REPORT_FILE" "\$HISTORICAL_FILE"

if [ ! -s "\$HASH_FILE" ]; then
    echo_msg "Generating initial hashes..."
    sudo find "\$WEB_DIR" -type f -exec sha256sum {} \; | sudo tee "\$HASH_FILE" >/dev/null
    echo_msg "Hashes generated and saved to \$HASH_FILE."
    exit 0
fi

sudo find "\$WEB_DIR" -type f -exec sha256sum {} \; | sudo tee "\$TEMP_HASH_FILE" >/dev/null

if ! sudo diff "\$HASH_FILE" "\$TEMP_HASH_FILE" >/dev/null; then
    echo_msg "\033[1;31mUnauthorized changes detected on \$(date).\033[0m"
    if [[ ! -f "\$FLAG_FILE" ]]; then
        {
            echo "\$(date): Unauthorized changes detected."
            sudo diff "\$HASH_FILE" "\$TEMP_HASH_FILE"
        } | tee -a "\$REPORT_FILE" "\$HISTORICAL_FILE" "\$ALERT_FILE" >/dev/null
        wall "ALERT: Unauthorized changes detected in \$WEB_DIR Check \$ALERT_FILE for details.

        check:
        sudo cat \$ALERT_FILE

        "
        
        sudo touch "\$FLAG_FILE"
    fi

#aliased to xclip -sel clip sudo cat \$ALERT_FILE 
#no se incorpora porque no funciona bien con crontab, pero si funcionaria normal

#sudo cat "\$ALERT_FILE" | xclip -sel clip


else
    sudo rm -f "\$FLAG_FILE"
    echo_msg "No changes detected on \$(date)."
fi

sudo mv -f "\$TEMP_HASH_FILE" "\$HASH_FILE"

CRON_ENTRY="* * * * * /bin/bash -c '\$SCRIPT_PATH; sleep 30; \$SCRIPT_PATH'"
if ! sudo crontab -l 2>/dev/null | grep -qF "\$SCRIPT_PATH"; then
    (sudo crontab -l 2>/dev/null; echo "\$CRON_ENTRY") | sudo crontab -
    echo_msg "Cronjob agregado para ejecutar el script cada 30 segundos."
else
    echo_msg "El cronjob ya existe. No se realizaron cambios."
fi
EOF

sudo chmod +x "${NEW_SCRIPT}"

echo ""
echo -e "\033[1;34m_________________________________________________________\033[0m"
echo ""
echo -e "\033[1;32mNuevo script creado:\033[0m \033[1;36m${NEW_SCRIPT}\033[0m"
echo ""
echo -e "\033[1;32mLogs:\033[0m"
echo -e "\033[1;33m  /var/log/${REPORT_FILE_NAME}\033[0m"
echo -e "\033[1;33m  /var/log/${HISTORICAL_FILE_NAME}\033[0m"
echo ""
echo -e "\033[1;32mejecutar para empezar:\033[0m"
echo -e "\033[1;36msudo ${NEW_SCRIPT}\033[0m"
echo ""
echo -e "\033[1;32msudo crontab -l\033[0m"
echo ""
echo -e "\033[1;32mverificar que exista el nuevo script en el cron\033[0m"
echo ""

echo -e "\033[1;31mADVISORY: This script should be used for authorized penetration testing and/or educational purposes only. Any misuse of this software will not be the responsibility of the author or of any other collaborator. Use it at your own computers and/or with the computer owner's permission.\033[0m"