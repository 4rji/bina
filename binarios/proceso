#!/usr/bin/env bash
# proc-tools.sh - interactive menu to inspect a PID (no pauses)
# Usage: ./proc-tools.sh <PID>

set -euo pipefail

PID="${1:-}"
if [[ -z "$PID" ]]; then echo "Usage: $0 <PID>"; exit 2; fi

SUDO=""; [[ $EUID -ne 0 ]] && SUDO="sudo"

PROC_NAME="$(cat /proc/"$PID"/comm 2>/dev/null || echo "$PID")"
SAFE_NAME="$(printf '%s' "$PROC_NAME" | tr -cd 'A-Za-z0-9._-')"
TS="$(date +%F_%H%M%S)"
LOGFILE="${SAFE_NAME}_${PID}_${TS}.log"

# Message banner helper
echo_msg() {
    echo -e "\033[1;34m==============================================\033[0m"
    echo -e "\033[1;37m$1\033[0m"
    echo -e "\033[1;34m==============================================\033[0m"
}

CMDS=(
"$SUDO lsof -p $PID | grep -i deleted || true"
"$SUDO ls -l /proc/$PID/fd | grep deleted || true"
"tr '\\0' ' ' < /proc/$PID/cmdline; echo"
"$SUDO grep -i deleted /proc/$PID/maps || true"
"$SUDO stat /proc/$PID /proc/$PID/exe || true"
"$SUDO nsenter -t $PID -m -- readlink /proc/$PID/exe 2>/dev/null || true"
"$SUDO lsof | grep $PID | grep -i deleted || true"
"$SUDO lsof -p $PID || true"
"readlink /proc/$PID/exe 2>/dev/null || true"
"$SUDO lsof -nP -a -p $PID -i || true"
"$SUDO ss -H -tupna | grep -E \"pid=$PID[,)]\" || true"
)

sep(){ echo -e "\033[36m------------------------------------------------------------\033[0m"; }

run(){
  local cmd="$1"
  echo -e "\n\033[90m_________________________________________________________\033[0m\n"
  echo -e "\033[1;33m>> Running: $cmd\033[0m"
  echo -e "\033[35m$cmd\033[0m"
  sep
  bash -lc "$cmd" 2>&1 | sed '/lsof: no pwd entry for UID/d'
  echo -e "\n\033[90m_________________________________________________________\033[0m\n"
}

run_log(){
  local cmd="$1"
  echo -e "\n\033[90m_________________________________________________________\033[0m\n" | tee -a "$LOGFILE" >/dev/null
  { echo -e "\033[1;33m>> Running: $cmd\033[0m"
    echo -e "\033[35m$cmd\033[0m"
    sep; } | tee -a "$LOGFILE"
  bash -lc "$cmd" 2>&1 | sed '/lsof: no pwd entry for UID/d' | tee -a "$LOGFILE"
  echo -e "\n\033[90m_________________________________________________________\033[0m\n" | tee -a "$LOGFILE" >/dev/null
}

menu(){
  echo -e "\033[1;32m"
  cat <<'EOF'

  Select an option:
   1) lsof -p <PID> | grep deleted
   2) ls -l /proc/<PID>/fd | grep deleted
   3) show /proc/<PID>/cmdline
   4) grep -i deleted /proc/<PID>/maps
   5) stat /proc/<PID> and /proc/<PID>/exe
   6) nsenter -t <PID> -m -- readlink /proc/<PID>/exe
   7) lsof | grep <PID> | grep -i deleted
   8) lsof -p <PID> (full output)
   9) readlink /proc/<PID>/exe
   10) lsof -nP -a -p <PID> -i
   11) ss -H -tupna | grep pid=<PID>
   A) Run all and save log
   Q) Quit

EOF
  echo -e "\033[0m"
}

trap 'echo; exit 0' INT TERM

# Title banner
echo_msg "proc-tools.sh â€” Interactive menu for PID $PID"

while true; do
  menu
  echo -ne "\033[36m  Option: \033[0m"
  read -r opt
  case "${opt,,}" in
    1) run "${CMDS[0]}" ;;
    2) run "${CMDS[1]}" ;;
    3) run "${CMDS[2]}" ;;
    4) run "${CMDS[3]}" ;;
    5) run "${CMDS[4]}" ;;
    6) run "${CMDS[5]}" ;;
    7) run "${CMDS[6]}" ;;
    8) run "${CMDS[7]}" ;;
    9) run "${CMDS[8]}" ;;
    10) run "${CMDS[9]}" ;;
    11) run "${CMDS[10]}" ;;
    a)
      : > "$LOGFILE"
      for cmd in "${CMDS[@]}"; do run_log "$cmd"; done
      echo_msg "Log saved: $LOGFILE"
      ;;
    q|quit|exit) exit 0 ;;
    *) echo -e "\033[31mInvalid option.\033[0m" ;;
  esac
done