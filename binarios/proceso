#!/usr/bin/env bash
# proc-tools.sh - menú interactivo para inspeccionar un PID (sin pausas)
# Uso: ./proc-tools.sh <PID>

set -euo pipefail

PID="${1:-}"
if [[ -z "$PID" ]]; then echo "Uso: $0 <PID>"; exit 2; fi

SUDO=""; [[ $EUID -ne 0 ]] && SUDO="sudo"

# Nombre seguro para archivo de log
PROC_NAME="$(cat /proc/"$PID"/comm 2>/dev/null || echo "$PID")"
SAFE_NAME="$(printf '%s' "$PROC_NAME" | tr -cd 'A-Za-z0-9._-')"
TS="$(date +%F_%H%M%S)"
LOGFILE="${SAFE_NAME}_${PID}_${TS}.log"

# Comandos (en orden)
CMDS=(
"$SUDO lsof -p $PID | grep -i deleted || true"
"$SUDO ls -l /proc/$PID/fd | grep deleted || true"
"tr '\\0' ' ' < /proc/$PID/cmdline; echo"
"$SUDO grep -i deleted /proc/$PID/maps || true"
"$SUDO stat /proc/$PID /proc/$PID/exe || true"
"$SUDO nsenter -t $PID -m -- readlink /proc/$PID/exe 2>/dev/null || true"
"$SUDO lsof | grep $PID | grep -i deleted || true"
"$SUDO lsof -p $PID || true"
"readlink /proc/$PID/exe 2>/dev/null || true"
)

sep() { echo "------------------------------------------------------------"; }

run() {
  local cmd="$1"
  echo ">> Ejecutando: $cmd"
  echo "$cmd"
  sep
  bash -lc "$cmd" 2>&1 | sed '/lsof: no pwd entry for UID/d'
  sep
}

run_log() {
  local cmd="$1"
  {
    echo ">> Ejecutando: $cmd"
    echo "$cmd"
    sep
    bash -lc "$cmd" 2>&1 | sed '/lsof: no pwd entry for UID/d'
    sep
  } | tee -a "$LOGFILE"
}

menu() {
  cat <<'EOF'

Seleccione una opción:
 1) lsof -p <PID> | grep deleted
 2) ls -l /proc/<PID>/fd | grep deleted
 3) mostrar /proc/<PID>/cmdline
 4) grep -i deleted /proc/<PID>/maps
 5) stat /proc/<PID> y /proc/<PID>/exe
 6) nsenter -t <PID> -m -- readlink /proc/<PID>/exe
 7) lsof | grep <PID> | grep -i deleted
 8) lsof -p <PID> (salida completa)
 9) readlink /proc/<PID>/exe
 A) Ejecutar todas y guardar log
 Q) Salir
EOF
}

trap 'echo; exit 0' INT TERM

while true; do
  menu
  read -r -p "Opción: " opt
  case "${opt,,}" in
    1) run "${CMDS[0]}" ;;
    2) run "${CMDS[1]}" ;;
    3) run "${CMDS[2]}" ;;
    4) run "${CMDS[3]}" ;;
    5) run "${CMDS[4]}" ;;
    6) run "${CMDS[5]}" ;;
    7) run "${CMDS[6]}" ;;
    8) run "${CMDS[7]}" ;;
    9) run "${CMDS[8]}" ;;
    a)
      : > "$LOGFILE"
      for cmd in "${CMDS[@]}"; do run_log "$cmd"; done
      echo ">> Log guardado en: $LOGFILE"
      ;;
    q|quit|exit) exit 0 ;;
    *) echo "Opción inválida." ;;
  esac
done
